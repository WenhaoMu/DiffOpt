1469983670
compound
0
2023-11-23 03:59:42.087914: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 03:59:42.310963: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 03:59:43.547139: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 03:59:43.547357: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 03:59:43.547373: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6219,  0.2723, -0.8538, -0.3925,  0.3328,  0.3678,  0.1219, -0.1359,
        -0.7734,  0.2767,  0.1439, -0.1948, -0.5988,  0.3968, -0.0918,  2.1053,
         0.1883, -1.1262, -0.5506, -0.5527, -1.1478,  0.5093,  0.6161, -0.9982,
         2.1461,  0.4118,  1.0499,  0.5071,  1.1214, -0.0079, -0.6938, -1.1425],
       device='cuda:0')
sum of x entries: -0.3151973485946655
RESULT torch.Size([10])
logp: 0.48159125447273254
QED: 0.7493628859519958
SA: 0.14620281755924225
Solution: 0.9326162338256836
normalized output: 0.8657898306846619
none
tensor(0.8114, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8159e-01, 7.4936e-01, 1.4620e-01, 5.4667e-01, 6.5103e-02, 2.6806e-05,
        9.1160e-06, 1.4221e-05, 1.0898e-05, 4.0454e-01], device='cuda:0')
1469983670
compound
1
2023-11-23 04:06:16.737934: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 04:06:16.959076: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 04:06:18.277869: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 04:06:18.278095: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 04:06:18.278116: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
1469983670
compound
0
2023-11-23 04:09:27.812467: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 04:09:28.019010: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 04:09:29.271075: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 04:09:29.271320: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 04:09:29.271386: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6220,  0.2723, -0.8537, -0.3928,  0.3329,  0.3679,  0.1218, -0.1359,
        -0.7737,  0.2769,  0.1437, -0.1949, -0.5989,  0.3970, -0.0917,  2.1055,
         0.1883, -1.1263, -0.5506, -0.5528, -1.1479,  0.5092,  0.6160, -0.9983,
         2.1461,  0.4118,  1.0499,  0.5069,  1.1215, -0.0078, -0.6938, -1.1423],
       device='cuda:0')
sum of x entries: -0.3155384063720703
RESULT torch.Size([10])
logp: 0.4816141426563263
QED: 0.749356210231781
SA: 0.14618636667728424
Solution: 0.9326162338256836
normalized output: 0.8657956719398499
none
tensor(0.8114, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8161e-01, 7.4936e-01, 1.4619e-01, 5.4667e-01, 6.5098e-02, 2.6791e-05,
        9.1099e-06, 1.4213e-05, 1.0892e-05, 4.0454e-01], device='cuda:0')
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6219,  0.2723, -0.8538, -0.3925,  0.3328,  0.3678,  0.1219, -0.1359,
        -0.7734,  0.2767,  0.1439, -0.1948, -0.5988,  0.3968, -0.0918,  2.1053,
         0.1883, -1.1262, -0.5506, -0.5527, -1.1478,  0.5093,  0.6161, -0.9982,
         2.1461,  0.4118,  1.0499,  0.5071,  1.1214, -0.0079, -0.6938, -1.1425],
       device='cuda:0')
sum of x entries: -0.3151973485946655
RESULT torch.Size([10])
logp: 0.48159125447273254
QED: 0.7493628859519958
SA: 0.14620281755924225
Solution: 0.9326162338256836
normalized output: 0.8657898306846619
none
tensor(0.8114, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8159e-01, 7.4936e-01, 1.4620e-01, 5.4667e-01, 6.5103e-02, 2.6806e-05,
        9.1160e-06, 1.4221e-05, 1.0898e-05, 4.0454e-01], device='cuda:0')
1469983670
compound
1
2023-11-23 04:18:38.128657: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 04:18:38.372087: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 04:18:39.708018: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 04:18:39.708233: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 04:18:39.708264: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6220,  0.2723, -0.8537, -0.3928,  0.3329,  0.3679,  0.1218, -0.1359,
        -0.7737,  0.2769,  0.1437, -0.1949, -0.5989,  0.3970, -0.0917,  2.1055,
         0.1883, -1.1263, -0.5506, -0.5528, -1.1479,  0.5092,  0.6160, -0.9983,
         2.1461,  0.4118,  1.0499,  0.5069,  1.1215, -0.0078, -0.6938, -1.1423],
       device='cuda:0')
sum of x entries: -0.31553828716278076
RESULT torch.Size([10])
logp: 0.48161420226097107
QED: 0.7493560910224915
SA: 0.14618636667728424
Solution: 0.9326162338256836
normalized output: 0.8657956719398499
none
tensor(0.8114, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8161e-01, 7.4936e-01, 1.4619e-01, 5.4667e-01, 6.5098e-02, 2.6791e-05,
        9.1099e-06, 1.4213e-05, 1.0892e-05, 4.0454e-01], device='cuda:0')
1469983670
compound
2
2023-11-23 04:25:18.652712: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 04:25:18.913167: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 04:25:20.197959: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 04:25:20.198411: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 04:25:20.198492: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6220,  0.2723, -0.8537, -0.3930,  0.3329,  0.3679,  0.1218, -0.1359,
        -0.7740,  0.2771,  0.1435, -0.1949, -0.5990,  0.3971, -0.0915,  2.1057,
         0.1884, -1.1263, -0.5506, -0.5528, -1.1480,  0.5092,  0.6160, -0.9984,
         2.1460,  0.4119,  1.0499,  0.5068,  1.1216, -0.0078, -0.6938, -1.1421],
       device='cuda:0')
sum of x entries: -0.3158903121948242
RESULT torch.Size([10])
logp: 0.4816371202468872
QED: 0.7493493556976318
SA: 0.14616991579532623
Solution: 0.9326162338256836
normalized output: 0.8658015131950378
none
tensor(0.8115, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8164e-01, 7.4935e-01, 1.4617e-01, 5.4668e-01, 6.5093e-02, 2.6776e-05,
        9.1037e-06, 1.4205e-05, 1.0885e-05, 4.0455e-01], device='cuda:0')
1469983670
compound
3
2023-11-23 04:32:03.046146: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 04:32:03.267701: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 04:32:04.582055: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 04:32:04.582281: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 04:32:04.582314: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6221,  0.2723, -0.8537, -0.3933,  0.3329,  0.3679,  0.1218, -0.1358,
        -0.7743,  0.2772,  0.1434, -0.1950, -0.5991,  0.3973, -0.0914,  2.1059,
         0.1884, -1.1264, -0.5506, -0.5529, -1.1482,  0.5092,  0.6159, -0.9985,
         2.1459,  0.4119,  1.0499,  0.5066,  1.1216, -0.0077, -0.6937, -1.1419],
       device='cuda:0')
sum of x entries: -0.3162238597869873
RESULT torch.Size([10])
logp: 0.48166000843048096
QED: 0.7493425607681274
SA: 0.14615340530872345
Solution: 0.9326162338256836
normalized output: 0.8658073544502258
none
tensor(0.8115, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8166e-01, 7.4934e-01, 1.4615e-01, 5.4668e-01, 6.5088e-02, 2.6761e-05,
        9.0976e-06, 1.4197e-05, 1.0878e-05, 4.0455e-01], device='cuda:0')
1469983670
compound
4
2023-11-23 04:38:52.202092: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 04:38:52.439695: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 04:38:53.838534: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 04:38:53.838756: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 04:38:53.838772: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6221,  0.2723, -0.8536, -0.3935,  0.3329,  0.3679,  0.1218, -0.1358,
        -0.7746,  0.2774,  0.1432, -0.1950, -0.5992,  0.3975, -0.0913,  2.1061,
         0.1885, -1.1264, -0.5506, -0.5529, -1.1483,  0.5091,  0.6159, -0.9986,
         2.1459,  0.4119,  1.0499,  0.5064,  1.1217, -0.0077, -0.6937, -1.1417],
       device='cuda:0')
sum of x entries: -0.3165627717971802
RESULT torch.Size([10])
logp: 0.4816829562187195
QED: 0.7493360042572021
SA: 0.14613698422908783
Solution: 0.9326162338256836
normalized output: 0.865813136100769
none
tensor(0.8115, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8168e-01, 7.4934e-01, 1.4614e-01, 5.4669e-01, 6.5082e-02, 2.6746e-05,
        9.0915e-06, 1.4188e-05, 1.0871e-05, 4.0455e-01], device='cuda:0')
1469983670
compound
5
2023-11-23 04:45:37.605954: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 04:45:37.825450: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 04:45:39.164753: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 04:45:39.164987: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 04:45:39.165011: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6221,  0.2723, -0.8536, -0.3937,  0.3329,  0.3680,  0.1218, -0.1358,
        -0.7749,  0.2776,  0.1430, -0.1951, -0.5993,  0.3977, -0.0912,  2.1063,
         0.1885, -1.1265, -0.5505, -0.5530, -1.1485,  0.5091,  0.6159, -0.9987,
         2.1458,  0.4119,  1.0500,  0.5063,  1.1218, -0.0076, -0.6936, -1.1416],
       device='cuda:0')
sum of x entries: -0.31690406799316406
RESULT torch.Size([10])
logp: 0.48170581459999084
QED: 0.7493292093276978
SA: 0.14612048864364624
Solution: 0.9326162338256836
normalized output: 0.8658188581466675
none
tensor(0.8115, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8171e-01, 7.4933e-01, 1.4612e-01, 5.4669e-01, 6.5077e-02, 2.6731e-05,
        9.0853e-06, 1.4180e-05, 1.0865e-05, 4.0455e-01], device='cuda:0')
1469983670
compound
10
2023-11-23 04:52:15.782750: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 04:52:16.005992: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 04:52:17.365147: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 04:52:17.365420: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 04:52:17.365462: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6224,  0.2723, -0.8534, -0.3949,  0.3330,  0.3681,  0.1217, -0.1357,
        -0.7765,  0.2785,  0.1422, -0.1953, -0.5997,  0.3985, -0.0906,  2.1073,
         0.1888, -1.1268, -0.5504, -0.5532, -1.1492,  0.5089,  0.6156, -0.9991,
         2.1455,  0.4120,  1.0500,  0.5055,  1.1221, -0.0073, -0.6934, -1.1407],
       device='cuda:0')
sum of x entries: -0.3185923099517822
RESULT torch.Size([10])
logp: 0.48181968927383423
QED: 0.749297022819519
SA: 0.14603857696056366
Solution: 0.9326162338256836
normalized output: 0.8658479452133179
none
tensor(0.8115, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8182e-01, 7.4930e-01, 1.4604e-01, 5.4672e-01, 6.5052e-02, 2.6655e-05,
        9.0547e-06, 1.4139e-05, 1.0831e-05, 4.0457e-01], device='cuda:0')
1469983670
compound
15
2023-11-23 04:59:00.106976: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 04:59:00.328981: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 04:59:01.717285: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 04:59:01.717521: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 04:59:01.717539: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6226,  0.2723, -0.8532, -0.3961,  0.3331,  0.3682,  0.1216, -0.1356,
        -0.7780,  0.2793,  0.1413, -0.1955, -0.6002,  0.3994, -0.0900,  2.1083,
         0.1890, -1.1270, -0.5504, -0.5534, -1.1499,  0.5087,  0.6154, -0.9995,
         2.1451,  0.4121,  1.0501,  0.5047,  1.1224, -0.0070, -0.6932, -1.1398],
       device='cuda:0')
sum of x entries: -0.32027196884155273
RESULT torch.Size([10])
logp: 0.4819318652153015
QED: 0.7492687106132507
SA: 0.14595772325992584
Solution: 0.9326162338256836
normalized output: 0.8658768534660339
none
tensor(0.8115, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8193e-01, 7.4927e-01, 1.4596e-01, 5.4675e-01, 6.5025e-02, 2.6580e-05,
        9.0243e-06, 1.4098e-05, 1.0798e-05, 4.0458e-01], device='cuda:0')
1469983670
compound
20
2023-11-23 05:05:43.566631: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 05:05:43.792674: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 05:05:45.048583: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 05:05:45.048809: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 05:05:45.048827: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6228,  0.2723, -0.8531, -0.3973,  0.3332,  0.3684,  0.1215, -0.1355,
        -0.7795,  0.2802,  0.1404, -0.1958, -0.6007,  0.4003, -0.0893,  2.1093,
         0.1892, -1.1273, -0.5503, -0.5536, -1.1506,  0.5084,  0.6151, -0.9999,
         2.1448,  0.4122,  1.0502,  0.5039,  1.1228, -0.0067, -0.6930, -1.1389],
       device='cuda:0')
sum of x entries: -0.32194650173187256
RESULT torch.Size([10])
logp: 0.48204317688941956
QED: 0.7492406368255615
SA: 0.14587707817554474
Solution: 0.9326162338256836
normalized output: 0.8659055829048157
none
tensor(0.8115, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8204e-01, 7.4924e-01, 1.4588e-01, 5.4678e-01, 6.4999e-02, 2.6505e-05,
        8.9939e-06, 1.4058e-05, 1.0764e-05, 4.0460e-01], device='cuda:0')
1469983670
compound
30
2023-11-23 05:12:27.628613: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 05:12:27.850497: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 05:12:29.166233: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 05:12:29.166454: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 05:12:29.166472: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6233,  0.2723, -0.8527, -0.3997,  0.3334,  0.3687,  0.1214, -0.1354,
        -0.7825,  0.2819,  0.1387, -0.1963, -0.6016,  0.4020, -0.0881,  2.1113,
         0.1897, -1.1278, -0.5501, -0.5540, -1.1520,  0.5080,  0.6147, -1.0008,
         2.1441,  0.4123,  1.0504,  0.5024,  1.1234, -0.0062, -0.6927, -1.1371],
       device='cuda:0')
sum of x entries: -0.3252286911010742
RESULT torch.Size([10])
logp: 0.4822648763656616
QED: 0.7491844892501831
SA: 0.14571672677993774
Solution: 0.9326162338256836
normalized output: 0.8659635782241821
none
tensor(0.8116, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8226e-01, 7.4918e-01, 1.4572e-01, 5.4684e-01, 6.4946e-02, 2.6356e-05,
        8.9337e-06, 1.3977e-05, 1.0698e-05, 4.0462e-01], device='cuda:0')
1469983670
compound
40
2023-11-23 05:19:13.958986: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 05:19:14.216657: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 05:19:15.628472: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 05:19:15.628674: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 05:19:15.628691: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6237,  0.2723, -0.8524, -0.4020,  0.3336,  0.3690,  0.1213, -0.1352,
        -0.7855,  0.2836,  0.1370, -0.1967, -0.6025,  0.4037, -0.0869,  2.1132,
         0.1902, -1.1283, -0.5499, -0.5544, -1.1534,  0.5076,  0.6142, -1.0016,
         2.1435,  0.4125,  1.0505,  0.5008,  1.1241, -0.0056, -0.6923, -1.1353],
       device='cuda:0')
sum of x entries: -0.3284733295440674
RESULT torch.Size([10])
logp: 0.4824841320514679
QED: 0.7491292953491211
SA: 0.14555789530277252
Solution: 0.9326162338256836
normalized output: 0.866022527217865
none
tensor(0.8117, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8248e-01, 7.4913e-01, 1.4556e-01, 5.4691e-01, 6.4894e-02, 2.6208e-05,
        8.8742e-06, 1.3897e-05, 1.0632e-05, 4.0465e-01], device='cuda:0')
1469983670
compound
50
2023-11-23 05:25:54.055984: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 05:25:54.276532: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 05:25:55.523425: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 05:25:55.523639: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 05:25:55.523656: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6242,  0.2723, -0.8521, -0.4043,  0.3339,  0.3693,  0.1212, -0.1350,
        -0.7885,  0.2853,  0.1353, -0.1972, -0.6034,  0.4053, -0.0857,  2.1151,
         0.1907, -1.1288, -0.5496, -0.5548, -1.1548,  0.5072,  0.6137, -1.0024,
         2.1428,  0.4126,  1.0507,  0.4993,  1.1248, -0.0050, -0.6919, -1.1335],
       device='cuda:0')
sum of x entries: -0.33160555362701416
RESULT torch.Size([10])
logp: 0.48270079493522644
QED: 0.7490748763084412
SA: 0.14540056884288788
Solution: 0.9326162338256836
normalized output: 0.8661263585090637
none
tensor(0.8117, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8270e-01, 7.4907e-01, 1.4540e-01, 5.4697e-01, 6.4842e-02, 2.6062e-05,
        8.8154e-06, 1.3818e-05, 1.0568e-05, 4.0468e-01], device='cuda:0')
1469983670
compound
60
2023-11-23 05:32:41.634561: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 05:32:41.860634: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 05:32:43.222099: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 05:32:43.222293: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 05:32:43.222310: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6246,  0.2724, -0.8518, -0.4065,  0.3341,  0.3696,  0.1211, -0.1349,
        -0.7915,  0.2870,  0.1337, -0.1976, -0.6044,  0.4069, -0.0844,  2.1171,
         0.1912, -1.1293, -0.5494, -0.5552, -1.1563,  0.5068,  0.6132, -1.0031,
         2.1422,  0.4128,  1.0508,  0.4979,  1.1254, -0.0044, -0.6916, -1.1317],
       device='cuda:0')
sum of x entries: -0.3346872329711914
RESULT torch.Size([10])
logp: 0.4829184412956238
QED: 0.7490198612213135
SA: 0.14524292945861816
Solution: 0.9326162338256836
normalized output: 0.8662693500518799
none
tensor(0.8119, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8292e-01, 7.4902e-01, 1.4524e-01, 5.4703e-01, 6.4789e-02, 2.5917e-05,
        8.7569e-06, 1.3739e-05, 1.0503e-05, 4.0470e-01], device='cuda:0')
1469983670
compound
70
2023-11-23 05:39:26.889048: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 05:39:27.130949: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 05:39:28.385768: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 05:39:28.385973: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 05:39:28.385990: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6250,  0.2724, -0.8515, -0.4088,  0.3343,  0.3699,  0.1210, -0.1348,
        -0.7944,  0.2886,  0.1320, -0.1981, -0.6053,  0.4086, -0.0832,  2.1190,
         0.1917, -1.1298, -0.5492, -0.5555, -1.1577,  0.5064,  0.6128, -1.0039,
         2.1415,  0.4129,  1.0510,  0.4964,  1.1261, -0.0039, -0.6912, -1.1299],
       device='cuda:0')
sum of x entries: -0.33778810501098633
RESULT torch.Size([10])
logp: 0.48313647508621216
QED: 0.7489649057388306
SA: 0.1450851857662201
Solution: 0.9326162338256836
normalized output: 0.8664141893386841
none
tensor(0.8120, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8314e-01, 7.4896e-01, 1.4509e-01, 5.4709e-01, 6.4737e-02, 2.5772e-05,
        8.6987e-06, 1.3660e-05, 1.0439e-05, 4.0473e-01], device='cuda:0')
1469983670
compound
80
2023-11-23 05:46:10.879468: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 05:46:11.106417: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 05:46:12.422607: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 05:46:12.422827: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 05:46:12.422842: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6254,  0.2723, -0.8512, -0.4110,  0.3345,  0.3702,  0.1209, -0.1346,
        -0.7974,  0.2902,  0.1303, -0.1985, -0.6062,  0.4102, -0.0820,  2.1209,
         0.1921, -1.1302, -0.5491, -0.5559, -1.1591,  0.5060,  0.6123, -1.0047,
         2.1409,  0.4131,  1.0511,  0.4949,  1.1267, -0.0033, -0.6909, -1.1282],
       device='cuda:0')
sum of x entries: -0.3409198522567749
RESULT torch.Size([10])
logp: 0.48335328698158264
QED: 0.7489127516746521
SA: 0.14492739737033844
Solution: 0.9326162338256836
normalized output: 0.8665561676025391
none
tensor(0.8121, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8335e-01, 7.4891e-01, 1.4493e-01, 5.4715e-01, 6.4685e-02, 2.5628e-05,
        8.6410e-06, 1.3582e-05, 1.0375e-05, 4.0476e-01], device='cuda:0')
1469983670
compound
90
2023-11-23 05:52:47.287399: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 05:52:47.514460: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 05:52:48.972144: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 05:52:48.972363: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 05:52:48.972380: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6259,  0.2723, -0.8509, -0.4132,  0.3347,  0.3705,  0.1209, -0.1345,
        -0.8004,  0.2919,  0.1287, -0.1990, -0.6072,  0.4118, -0.0807,  2.1229,
         0.1926, -1.1307, -0.5489, -0.5563, -1.1605,  0.5056,  0.6118, -1.0055,
         2.1402,  0.4133,  1.0513,  0.4934,  1.1274, -0.0027, -0.6906, -1.1264],
       device='cuda:0')
sum of x entries: -0.3440110683441162
RESULT torch.Size([10])
logp: 0.48357197642326355
QED: 0.7488584518432617
SA: 0.144770085811615
Solution: 0.9326162338256836
normalized output: 0.8667135834693909
none
tensor(0.8123, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8357e-01, 7.4886e-01, 1.4477e-01, 5.4722e-01, 6.4634e-02, 2.5486e-05,
        8.5840e-06, 1.3505e-05, 1.0312e-05, 4.0479e-01], device='cuda:0')
1469983670
compound
100
2023-11-23 05:59:27.647734: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 05:59:27.838919: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 05:59:29.147016: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 05:59:29.147227: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 05:59:29.147245: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6263e+00,  2.7230e-01, -8.5060e-01, -4.1542e-01,  3.3487e-01,
         3.7084e-01,  1.2078e-01, -1.3436e-01, -8.0337e-01,  2.9346e-01,
         1.2704e-01, -1.9941e-01, -6.0813e-01,  4.1335e-01, -7.9488e-02,
         2.1248e+00,  1.9311e-01, -1.1312e+00, -5.4868e-01, -5.5659e-01,
        -1.1619e+00,  5.0528e-01,  6.1131e-01, -1.0062e+00,  2.1396e+00,
         4.1344e-01,  1.0514e+00,  4.9188e-01,  1.1281e+00, -2.1345e-03,
        -6.9031e-01, -1.1246e+00], device='cuda:0')
sum of x entries: -0.3470799922943115
RESULT torch.Size([10])
logp: 0.4837888181209564
QED: 0.748807430267334
SA: 0.14461229741573334
Solution: 0.9326162338256836
normalized output: 0.8668884634971619
none
tensor(0.8124, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8379e-01, 7.4881e-01, 1.4461e-01, 5.4728e-01, 6.4582e-02, 2.5344e-05,
        8.5271e-06, 1.3428e-05, 1.0249e-05, 4.0482e-01], device='cuda:0')
1469983670
compound
110
2023-11-23 06:06:03.846764: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 06:06:04.033756: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 06:06:05.442944: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 06:06:05.443137: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 06:06:05.443156: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6267e+00,  2.7226e-01, -8.5033e-01, -4.1758e-01,  3.3505e-01,
         3.7117e-01,  1.2073e-01, -1.3424e-01, -8.0630e-01,  2.9505e-01,
         1.2541e-01, -1.9986e-01, -6.0907e-01,  4.1492e-01, -7.8257e-02,
         2.1267e+00,  1.9358e-01, -1.1316e+00, -5.4847e-01, -5.5692e-01,
        -1.1634e+00,  5.0491e-01,  6.1082e-01, -1.0069e+00,  2.1390e+00,
         4.1362e-01,  1.0516e+00,  4.9045e-01,  1.1287e+00, -1.5766e-03,
        -6.9002e-01, -1.1228e+00], device='cuda:0')
sum of x entries: -0.35007572174072266
RESULT torch.Size([10])
logp: 0.48400142788887024
QED: 0.7487531304359436
SA: 0.14445753395557404
Solution: 0.9326162338256836
normalized output: 0.8670522570610046
none
tensor(0.8126, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8400e-01, 7.4875e-01, 1.4446e-01, 5.4734e-01, 6.4531e-02, 2.5204e-05,
        8.4712e-06, 1.3353e-05, 1.0187e-05, 4.0485e-01], device='cuda:0')
1469983670
compound
120
2023-11-23 06:12:40.235384: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 06:12:40.496786: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 06:12:41.868319: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 06:12:41.868558: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 06:12:41.868579: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6271e+00,  2.7226e-01, -8.5003e-01, -4.1974e-01,  3.3523e-01,
         3.7148e-01,  1.2063e-01, -1.3414e-01, -8.0922e-01,  2.9665e-01,
         1.2380e-01, -2.0024e-01, -6.1004e-01,  4.1654e-01, -7.7008e-02,
         2.1287e+00,  1.9406e-01, -1.1321e+00, -5.4826e-01, -5.5722e-01,
        -1.1648e+00,  5.0455e-01,  6.1030e-01, -1.0076e+00,  2.1384e+00,
         4.1382e-01,  1.0517e+00,  4.8893e-01,  1.1294e+00, -1.0219e-03,
        -6.8973e-01, -1.1210e+00], device='cuda:0')
sum of x entries: -0.352863073348999
RESULT torch.Size([10])
logp: 0.4842287302017212
QED: 0.7486944198608398
SA: 0.14430314302444458
Solution: 0.9326162338256836
normalized output: 0.8672254681587219
none
tensor(0.8127, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8423e-01, 7.4869e-01, 1.4430e-01, 5.4739e-01, 6.4482e-02, 2.5066e-05,
        8.4160e-06, 1.3278e-05, 1.0127e-05, 4.0490e-01], device='cuda:0')
1469983670
compound
130
2023-11-23 06:19:20.241130: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 06:19:20.504284: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 06:19:21.791749: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 06:19:21.791953: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 06:19:21.791969: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6275e+00,  2.7222e-01, -8.4975e-01, -4.2184e-01,  3.3542e-01,
         3.7180e-01,  1.2060e-01, -1.3404e-01, -8.1214e-01,  2.9820e-01,
         1.2219e-01, -2.0067e-01, -6.1098e-01,  4.1804e-01, -7.5781e-02,
         2.1306e+00,  1.9452e-01, -1.1326e+00, -5.4806e-01, -5.5750e-01,
        -1.1662e+00,  5.0421e-01,  6.0982e-01, -1.0083e+00,  2.1378e+00,
         4.1399e-01,  1.0519e+00,  4.8754e-01,  1.1300e+00, -4.8624e-04,
        -6.8945e-01, -1.1193e+00], device='cuda:0')
sum of x entries: -0.3557530641555786
RESULT torch.Size([10])
logp: 0.4844568073749542
QED: 0.7486214637756348
SA: 0.14415282011032104
Solution: 0.9326162338256836
normalized output: 0.8674087524414062
none
tensor(0.8129, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8446e-01, 7.4862e-01, 1.4415e-01, 5.4746e-01, 6.4433e-02, 2.4929e-05,
        8.3603e-06, 1.3204e-05, 1.0065e-05, 4.0494e-01], device='cuda:0')
1469983670
compound
140
2023-11-23 06:26:00.296555: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 06:26:00.543881: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 06:26:01.885861: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 06:26:01.886073: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 06:26:01.886110: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6280e+00,  2.7218e-01, -8.4947e-01, -4.2389e-01,  3.3562e-01,
         3.7212e-01,  1.2062e-01, -1.3394e-01, -8.1507e-01,  2.9973e-01,
         1.2059e-01, -2.0107e-01, -6.1193e-01,  4.1953e-01, -7.4539e-02,
         2.1324e+00,  1.9501e-01, -1.1330e+00, -5.4788e-01, -5.5779e-01,
        -1.1677e+00,  5.0386e-01,  6.0934e-01, -1.0089e+00,  2.1372e+00,
         4.1414e-01,  1.0520e+00,  4.8619e-01,  1.1307e+00,  5.9063e-05,
        -6.8920e-01, -1.1175e+00], device='cuda:0')
sum of x entries: -0.35852038860321045
RESULT torch.Size([10])
logp: 0.48468196392059326
QED: 0.7485443353652954
SA: 0.14400124549865723
Solution: 0.9326162338256836
normalized output: 0.8675773739814758
none
tensor(0.8131, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8468e-01, 7.4854e-01, 1.4400e-01, 5.4752e-01, 6.4383e-02, 2.4791e-05,
        8.3046e-06, 1.3130e-05, 1.0004e-05, 4.0498e-01], device='cuda:0')
1469983670
compound
150
2023-11-23 06:32:45.623464: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 06:32:45.869589: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 06:32:47.223266: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 06:32:47.223489: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 06:32:47.223511: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6283e+00,  2.7216e-01, -8.4918e-01, -4.2609e-01,  3.3578e-01,
         3.7243e-01,  1.2055e-01, -1.3381e-01, -8.1801e-01,  3.0135e-01,
         1.1895e-01, -2.0153e-01, -6.1294e-01,  4.2117e-01, -7.3268e-02,
         2.1345e+00,  1.9547e-01, -1.1334e+00, -5.4765e-01, -5.5810e-01,
        -1.1691e+00,  5.0352e-01,  6.0882e-01, -1.0096e+00,  2.1365e+00,
         4.1435e-01,  1.0522e+00,  4.8454e-01,  1.1314e+00,  6.2284e-04,
        -6.8892e-01, -1.1156e+00], device='cuda:0')
sum of x entries: -0.3613889217376709
RESULT torch.Size([10])
logp: 0.48492753505706787
QED: 0.748464822769165
SA: 0.1438468098640442
Solution: 0.9326162338256836
normalized output: 0.867750883102417
none
tensor(0.8132, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8493e-01, 7.4846e-01, 1.4385e-01, 5.4758e-01, 6.4336e-02, 2.4655e-05,
        8.2498e-06, 1.3057e-05, 9.9438e-06, 4.0503e-01], device='cuda:0')
1469983670
compound
160
2023-11-23 06:39:28.772168: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 06:39:28.996007: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 06:39:30.247041: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 06:39:30.247254: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 06:39:30.247273: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6288e+00,  2.7212e-01, -8.4885e-01, -4.2823e-01,  3.3592e-01,
         3.7273e-01,  1.2051e-01, -1.3371e-01, -8.2093e-01,  3.0290e-01,
         1.1736e-01, -2.0190e-01, -6.1390e-01,  4.2275e-01, -7.2008e-02,
         2.1364e+00,  1.9597e-01, -1.1338e+00, -5.4741e-01, -5.5834e-01,
        -1.1705e+00,  5.0317e-01,  6.0829e-01, -1.0103e+00,  2.1359e+00,
         4.1450e-01,  1.0524e+00,  4.8307e-01,  1.1321e+00,  1.1624e-03,
        -6.8861e-01, -1.1139e+00], device='cuda:0')
sum of x entries: -0.36407458782196045
RESULT torch.Size([10])
logp: 0.4851633906364441
QED: 0.7483866810798645
SA: 0.14369451999664307
Solution: 0.9326162338256836
normalized output: 0.8679234981536865
none
tensor(0.8134, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8516e-01, 7.4839e-01, 1.4369e-01, 5.4764e-01, 6.4288e-02, 2.4520e-05,
        8.1955e-06, 1.2985e-05, 9.8841e-06, 4.0508e-01], device='cuda:0')
1469983670
compound
170
2023-11-23 06:46:19.261336: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 06:46:19.505617: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 06:46:20.815282: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 06:46:20.815493: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 06:46:20.815519: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6292e+00,  2.7206e-01, -8.4855e-01, -4.3036e-01,  3.3605e-01,
         3.7303e-01,  1.2047e-01, -1.3360e-01, -8.2383e-01,  3.0447e-01,
         1.1575e-01, -2.0231e-01, -6.1491e-01,  4.2437e-01, -7.0758e-02,
         2.1384e+00,  1.9647e-01, -1.1342e+00, -5.4718e-01, -5.5863e-01,
        -1.1720e+00,  5.0283e-01,  6.0777e-01, -1.0110e+00,  2.1352e+00,
         4.1469e-01,  1.0525e+00,  4.8150e-01,  1.1327e+00,  1.6935e-03,
        -6.8835e-01, -1.1120e+00], device='cuda:0')
sum of x entries: -0.36692726612091064
RESULT torch.Size([10])
logp: 0.4854032099246979
QED: 0.7483072876930237
SA: 0.14354056119918823
Solution: 0.9326162338256836
normalized output: 0.8680896759033203
none
tensor(0.8135, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8540e-01, 7.4831e-01, 1.4354e-01, 5.4769e-01, 6.4240e-02, 2.4386e-05,
        8.1414e-06, 1.2912e-05, 9.8246e-06, 4.0513e-01], device='cuda:0')
1469983670
compound
180
2023-11-23 06:53:00.237248: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 06:53:00.481177: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 06:53:01.750618: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 06:53:01.750827: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 06:53:01.750844: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6296,  0.2720, -0.8483, -0.4324,  0.3362,  0.3734,  0.1205, -0.1335,
        -0.8267,  0.3060,  0.1141, -0.2027, -0.6159,  0.4259, -0.0695,  2.1403,
         0.1969, -1.1346, -0.5470, -0.5589, -1.1734,  0.5025,  0.6073, -1.0117,
         2.1346,  0.4148,  1.0527,  0.4800,  1.1334,  0.0022, -0.6881, -1.1102],
       device='cuda:0')
sum of x entries: -0.3695434331893921
RESULT torch.Size([10])
logp: 0.48563283681869507
QED: 0.7482315301895142
SA: 0.14339108765125275
Solution: 0.9326162338256836
normalized output: 0.8682578206062317
none
tensor(0.8137, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8563e-01, 7.4823e-01, 1.4339e-01, 5.4775e-01, 6.4193e-02, 2.4254e-05,
        8.0885e-06, 1.2841e-05, 9.7663e-06, 4.0517e-01], device='cuda:0')
1469983670
compound
190
2023-11-23 06:59:41.670492: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 06:59:41.925148: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 06:59:43.266508: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 06:59:43.266782: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 06:59:43.266832: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6299,  0.2719, -0.8480, -0.4345,  0.3364,  0.3737,  0.1205, -0.1334,
        -0.8296,  0.3075,  0.1126, -0.2030, -0.6169,  0.4274, -0.0682,  2.1422,
         0.1974, -1.1350, -0.5468, -0.5591, -1.1749,  0.5022,  0.6068, -1.0123,
         2.1340,  0.4150,  1.0529,  0.4786,  1.1340,  0.0027, -0.6880, -1.1084],
       device='cuda:0')
sum of x entries: -0.37213194370269775
RESULT torch.Size([10])
logp: 0.48586156964302063
QED: 0.7481549978256226
SA: 0.14324036240577698
Solution: 0.9326162338256836
normalized output: 0.8684377670288086
none
tensor(0.8138, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8586e-01, 7.4815e-01, 1.4324e-01, 5.4781e-01, 6.4145e-02, 2.4122e-05,
        8.0354e-06, 1.2770e-05, 9.7077e-06, 4.0522e-01], device='cuda:0')
1469983670
compound
200
2023-11-23 07:06:24.107530: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 07:06:24.367115: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 07:06:25.650937: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 07:06:25.651128: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 07:06:25.651145: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6304,  0.2719, -0.8477, -0.4365,  0.3365,  0.3740,  0.1205, -0.1333,
        -0.8325,  0.3090,  0.1111, -0.2034, -0.6179,  0.4288, -0.0669,  2.1441,
         0.1979, -1.1354, -0.5466, -0.5594, -1.1763,  0.5019,  0.6062, -1.0129,
         2.1334,  0.4152,  1.0531,  0.4772,  1.1347,  0.0033, -0.6877, -1.1066],
       device='cuda:0')
sum of x entries: -0.3746767044067383
RESULT torch.Size([10])
logp: 0.4860878586769104
QED: 0.748076319694519
SA: 0.14309287071228027
Solution: 0.9326162338256836
normalized output: 0.868613064289093
none
tensor(0.8140, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8609e-01, 7.4808e-01, 1.4309e-01, 5.4787e-01, 6.4098e-02, 2.3993e-05,
        7.9838e-06, 1.2701e-05, 9.6508e-06, 4.0526e-01], device='cuda:0')
1469983670
compound
300
2023-11-23 07:13:09.763357: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 07:13:09.952946: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 07:13:11.258693: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 07:13:11.258875: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 07:13:11.258893: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6344,  0.2710, -0.8460, -0.4556,  0.3381,  0.3776,  0.1218, -0.1326,
        -0.8612,  0.3231,  0.0971, -0.2064, -0.6274,  0.4427, -0.0548,  2.1629,
         0.2024, -1.1389, -0.5444, -0.5615, -1.1908,  0.4986,  0.6017, -1.0187,
         2.1275,  0.4167,  1.0551,  0.4641,  1.1416,  0.0083, -0.6863, -1.0890],
       device='cuda:0')
sum of x entries: -0.39760661125183105
RESULT torch.Size([10])
logp: 0.4882146120071411
QED: 0.7473757266998291
SA: 0.1416359692811966
Solution: 0.9326162338256836
normalized output: 0.8697320818901062
none
tensor(0.8150, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8821e-01, 7.4738e-01, 1.4164e-01, 5.4849e-01, 6.3609e-02, 2.2729e-05,
        7.4809e-06, 1.2019e-05, 9.0907e-06, 4.0562e-01], device='cuda:0')
1469983670
compound
400
2023-11-23 07:19:45.724325: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 07:19:45.966248: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 07:19:47.365447: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 07:19:47.365636: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 07:19:47.365654: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6384,  0.2699, -0.8447, -0.4729,  0.3386,  0.3807,  0.1236, -0.1321,
        -0.8888,  0.3361,  0.0845, -0.2084, -0.6370,  0.4555, -0.0428,  2.1814,
         0.2069, -1.1422, -0.5428, -0.5628, -1.2050,  0.4959,  0.5972, -1.0238,
         2.1221,  0.4183,  1.0574,  0.4519,  1.1484,  0.0129, -0.6856, -1.0710],
       device='cuda:0')
sum of x entries: -0.416750431060791
RESULT torch.Size([10])
logp: 0.49018359184265137
QED: 0.7467547059059143
SA: 0.14024706184864044
Solution: 0.9326162338256836
normalized output: 0.8688705563545227
none
tensor(0.8142, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.9018e-01, 7.4675e-01, 1.4025e-01, 5.4907e-01, 6.3134e-02, 2.1567e-05,
        7.0246e-06, 1.1392e-05, 8.5785e-06, 4.0594e-01], device='cuda:0')
1469983670
compound
500
2023-11-23 07:26:32.498323: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 07:26:32.726199: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 07:26:34.083341: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 07:26:34.083543: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 07:26:34.083564: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6422,  0.2688, -0.8441, -0.4884,  0.3393,  0.3838,  0.1268, -0.1318,
        -0.9157,  0.3481,  0.0739, -0.2097, -0.6456,  0.4664, -0.0313,  2.1990,
         0.2110, -1.1449, -0.5413, -0.5631, -1.2197,  0.4933,  0.5929, -1.0284,
         2.1175,  0.4194,  1.0595,  0.4424,  1.1555,  0.0171, -0.6855, -1.0533],
       device='cuda:0')
sum of x entries: -0.4304533004760742
RESULT torch.Size([10])
logp: 0.491936057806015
QED: 0.7462300062179565
SA: 0.13891012966632843
Solution: 0.9326162338256836
normalized output: 0.8662518858909607
none
tensor(0.8119, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.9194e-01, 7.4623e-01, 1.3891e-01, 5.4972e-01, 6.2639e-02, 2.0467e-05,
        6.5981e-06, 1.0797e-05, 8.0932e-06, 4.0613e-01], device='cuda:0')
1469983670
compound
600
2023-11-23 07:33:09.800670: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 07:33:10.016093: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 07:33:11.364651: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 07:33:11.364845: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 07:33:11.364862: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6454,  0.2679, -0.8449, -0.5028,  0.3404,  0.3867,  0.1304, -0.1330,
        -0.9425,  0.3590,  0.0649, -0.2094, -0.6537,  0.4770, -0.0205,  2.2158,
         0.2157, -1.1472, -0.5403, -0.5627, -1.2336,  0.4908,  0.5893, -1.0321,
         2.1135,  0.4206,  1.0618,  0.4342,  1.1621,  0.0207, -0.6861, -1.0363],
       device='cuda:0')
sum of x entries: -0.4395939111709595
RESULT torch.Size([10])
logp: 0.49354857206344604
QED: 0.7458205819129944
SA: 0.1375802755355835
Solution: 0.9326162338256836
normalized output: 0.8685891628265381
none
tensor(0.8140, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.9355e-01, 7.4582e-01, 1.3758e-01, 5.5037e-01, 6.2129e-02, 1.9413e-05,
        6.1960e-06, 1.0226e-05, 7.6314e-06, 4.0629e-01], device='cuda:0')
1469983670
compound
700
2023-11-23 07:39:54.730445: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 07:39:54.971441: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 07:39:56.291751: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 07:39:56.291960: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 07:39:56.291978: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6479,  0.2671, -0.8465, -0.5176,  0.3421,  0.3900,  0.1342, -0.1338,
        -0.9695,  0.3696,  0.0565, -0.2082, -0.6615,  0.4876, -0.0096,  2.2319,
         0.2199, -1.1492, -0.5396, -0.5619, -1.2470,  0.4888,  0.5855, -1.0362,
         2.1097,  0.4214,  1.0636,  0.4263,  1.1683,  0.0243, -0.6866, -1.0187],
       device='cuda:0')
sum of x entries: -0.4471721649169922
RESULT torch.Size([10])
logp: 0.4951353669166565
QED: 0.7454081177711487
SA: 0.1363096982240677
Solution: 0.9326162338256836
normalized output: 0.8708444833755493
none
tensor(0.8160, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.9514e-01, 7.4541e-01, 1.3631e-01, 5.5103e-01, 6.1641e-02, 1.8443e-05,
        5.8297e-06, 9.7022e-06, 7.2095e-06, 4.0649e-01], device='cuda:0')
1469983670
compound
800
2023-11-23 07:46:39.618826: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 07:46:39.805741: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 07:46:41.034823: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 07:46:41.035061: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 07:46:41.035081: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 110
Corresponding xs for GT ys max: tensor([ 9.4723e-01, -5.5696e-02,  1.9172e+00, -1.5561e+00, -1.0954e-01,
        -8.5638e-01,  4.2386e-01, -1.8328e+00,  2.4146e-01,  3.9747e-01,
        -4.9453e-01,  1.3463e-01, -1.4330e+00,  8.7012e-01, -1.9091e-01,
         1.8348e-01, -7.6345e-01, -1.1940e+00,  4.4673e-01,  2.1161e-01,
        -1.8322e-02,  9.1510e-01,  5.4085e-01, -7.7770e-01, -4.9300e-01,
         2.1685e+00,  4.2847e-01, -5.5256e-01, -3.7251e-01, -5.8847e-04,
         1.8143e-01, -1.3512e+00], device='cuda:0')
sum of x entries: -2.044095754623413
RESULT torch.Size([10])
logp: 0.5175459980964661
QED: 0.8099482655525208
SA: 0.22059397399425507
Solution: 0.9326162338256836
normalized output: 0.8729767799377441
none
tensor(0.8179, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([5.1755e-01, 8.0995e-01, 2.2059e-01, 4.5036e-01, 8.0242e-02, 1.0153e-04,
        3.2842e-05, 5.2381e-05, 3.6456e-05, 5.0242e-01], device='cuda:0')
1469983670
compound
900
2023-11-23 07:53:13.603356: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 07:53:13.857748: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 07:53:15.044042: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 07:53:15.044359: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 07:53:15.044411: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 110
Corresponding xs for GT ys max: tensor([ 0.9506, -0.0476,  1.9211, -1.5703, -0.1280, -0.8625,  0.4169, -1.8461,
         0.2157,  0.3982, -0.5158,  0.1388, -1.4322,  0.8831, -0.1914,  0.2049,
        -0.7635, -1.1923,  0.4661,  0.2011, -0.0097,  0.9270,  0.5436, -0.7862,
        -0.4830,  2.1723,  0.4341, -0.5675, -0.3824,  0.0029,  0.1918, -1.3523],
       device='cuda:0')
sum of x entries: -2.0627198219299316
RESULT torch.Size([10])
logp: 0.5190152525901794
QED: 0.8105095028877258
SA: 0.21898126602172852
Solution: 0.9326162338256836
normalized output: 0.8754257559776306
none
tensor(0.8201, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([5.1902e-01, 8.1051e-01, 2.1898e-01, 4.4977e-01, 7.9165e-02, 9.5472e-05,
        3.0282e-05, 4.8942e-05, 3.3685e-05, 5.0308e-01], device='cuda:0')
1469983670
compound
1000
2023-11-23 08:00:00.494458: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 08:00:00.723829: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 08:00:02.057705: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 08:00:02.057920: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 08:00:02.057938: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 110
Corresponding xs for GT ys max: tensor([ 9.5370e-01, -4.0510e-02,  1.9257e+00, -1.5837e+00, -1.4592e-01,
        -8.6759e-01,  4.1068e-01, -1.8589e+00,  1.9066e-01,  3.9914e-01,
        -5.3633e-01,  1.4298e-01, -1.4322e+00,  8.9631e-01, -1.9101e-01,
         2.2533e-01, -7.6290e-01, -1.1911e+00,  4.8450e-01,  1.9100e-01,
        -2.1591e-03,  9.3900e-01,  5.4625e-01, -7.9447e-01, -4.7307e-01,
         2.1759e+00,  4.4004e-01, -5.8145e-01, -3.9266e-01,  5.5850e-03,
         2.0229e-01, -1.3528e+00], device='cuda:0')
sum of x entries: -2.0776538848876953
RESULT torch.Size([10])
logp: 0.5203939080238342
QED: 0.8111704587936401
SA: 0.21737073361873627
Solution: 0.9326162338256836
normalized output: 0.8776324391365051
none
tensor(0.8221, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([5.2039e-01, 8.1117e-01, 2.1737e-01, 4.4925e-01, 7.8103e-02, 8.9790e-05,
        2.7966e-05, 4.5755e-05, 3.1171e-05, 5.0364e-01], device='cuda:0')
1469983670
compound
2000
2023-11-23 08:06:45.194863: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 08:06:45.452294: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 08:06:46.847638: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 08:06:46.847854: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 08:06:46.847872: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 6
Corresponding xs for GT ys max: tensor([-0.5195, -0.0572,  0.1383, -0.2041, -0.4926, -0.3037,  0.1220, -0.7853,
        -1.1120, -1.2666, -0.5943,  0.1850, -0.4380,  1.3999,  0.0676,  1.2007,
         0.0152, -0.4220,  0.6808, -1.1452, -0.6008,  0.9723,  1.8429, -1.0535,
         0.4268,  0.6923, -0.3758, -0.5958, -1.2404, -0.1063,  0.4973, -0.2239],
       device='cuda:0')
sum of x entries: -3.295651912689209
RESULT torch.Size([10])
logp: 0.4943133294582367
QED: 0.8222203850746155
SA: 0.16369350254535675
Solution: 0.9326162338256836
normalized output: 0.8935028314590454
none
tensor(0.8365, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.9431e-01, 8.2222e-01, 1.6369e-01, 4.7879e-01, 6.9898e-02, 3.8810e-05,
        1.6264e-05, 2.1523e-05, 1.9763e-05, 4.6536e-01], device='cuda:0')
1469983670
compound
3000
2023-11-23 08:13:32.204327: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 08:13:32.452434: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 08:13:33.859666: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 08:13:33.859877: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 08:13:33.859895: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 6
Corresponding xs for GT ys max: tensor([-0.6020, -0.0558,  0.1925, -0.4203, -0.5111, -0.2972,  0.0639, -0.8249,
        -1.2862, -1.1496, -0.7362,  0.2269, -0.4334,  1.5695, -0.0047,  1.4419,
         0.1138, -0.5427,  0.7154, -1.1084, -0.6553,  1.0471,  1.7897, -1.1168,
         0.4374,  0.8694, -0.2740, -0.6820, -1.2969, -0.0830,  0.4898, -0.1987],
       device='cuda:0')
sum of x entries: -3.3219404220581055
RESULT torch.Size([10])
logp: 0.5111038088798523
QED: 0.8207609057426453
SA: 0.14660833775997162
Solution: 0.9326162338256836
normalized output: 0.9111924171447754
none
tensor(0.8524, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([5.1110e-01, 8.2076e-01, 1.4661e-01, 4.7528e-01, 6.0986e-02, 1.8746e-05,
        6.2059e-06, 9.7322e-06, 7.9380e-06, 4.7171e-01], device='cuda:0')
1469983670
compound
4000
2023-11-23 08:20:21.768249: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 08:20:21.994637: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 08:20:23.404531: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 08:20:23.404733: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 08:20:23.404749: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 6
Corresponding xs for GT ys max: tensor([-0.6843, -0.0734,  0.3017, -0.6108, -0.5214, -0.2596,  0.0033, -0.8163,
        -1.5181, -1.0382, -0.8280,  0.1929, -0.4310,  1.7326, -0.0831,  1.6969,
         0.1937, -0.6676,  0.7821, -1.0999, -0.7094,  1.0518,  1.6568, -1.1796,
         0.4206,  1.0908, -0.0970, -0.7222, -1.3931, -0.0760,  0.5175, -0.1448],
       device='cuda:0')
sum of x entries: -3.3129947185516357
RESULT torch.Size([10])
logp: 0.5262240171432495
QED: 0.8226231336593628
SA: 0.13099229335784912
Solution: 0.9326162338256836
normalized output: 0.8959294557571411
none
tensor(0.8387, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([5.2622e-01, 8.2262e-01, 1.3099e-01, 4.7413e-01, 5.2707e-02, 8.8436e-06,
        2.4149e-06, 4.3428e-06, 3.1936e-06, 4.7140e-01], device='cuda:0')
1469983670
compound
5000
2023-11-23 08:27:10.989495: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 08:27:11.175868: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 08:27:12.504801: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 08:27:12.505038: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 08:27:12.505072: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 6
Corresponding xs for GT ys max: tensor([-0.7429, -0.0435,  0.5141, -0.8953, -0.6173, -0.1933, -0.0422, -0.7502,
        -1.7615, -0.8903, -0.9509,  0.1838, -0.3606,  1.9172, -0.0360,  1.8750,
         0.2762, -0.8172,  0.9344, -1.0028, -0.7677,  1.0522,  1.5867, -1.1522,
         0.4508,  1.3504,  0.1636, -0.7591, -1.5658, -0.0996,  0.5686, -0.2101],
       device='cuda:0')
sum of x entries: -2.7856764793395996
RESULT torch.Size([10])
logp: 0.5396497845649719
QED: 0.8367329835891724
SA: 0.11633063852787018
Solution: 0.9326162338256836
normalized output: 0.914597749710083
none
tensor(0.8555, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([5.3965e-01, 8.3673e-01, 1.1633e-01, 4.7282e-01, 4.3013e-02, 3.4864e-06,
        8.1758e-07, 1.6202e-06, 1.1097e-06, 4.6494e-01], device='cuda:0')
1469983670
compound
6000
2023-11-23 08:33:46.803918: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 08:33:47.048356: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 08:33:48.423762: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 08:33:48.423961: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 08:33:48.423976: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 6
Corresponding xs for GT ys max: tensor([-0.7944, -0.0322,  0.6611, -1.1777, -0.6802, -0.0841, -0.0695, -0.7327,
        -2.0562, -0.6628, -1.0580,  0.1415, -0.3424,  2.0206, -0.0918,  1.9761,
         0.4037, -1.0354,  1.0905, -0.8727, -0.8287,  1.0287,  1.6266, -1.0901,
         0.4019,  1.5755,  0.3712, -0.6069, -1.6319, -0.0487,  0.6222, -0.1969],
       device='cuda:0')
sum of x entries: -2.1736626625061035
RESULT torch.Size([10])
logp: 0.5492579340934753
QED: 0.8435713052749634
SA: 0.09857019782066345
Solution: 0.9326162338256836
normalized output: 0.901373565196991
none
tensor(0.8436, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([5.4926e-01, 8.4357e-01, 9.8570e-02, 4.7651e-01, 3.4718e-02, 1.1864e-06,
        2.3417e-07, 5.2050e-07, 3.2795e-07, 4.5181e-01], device='cuda:0')
1469983670
compound
7000
2023-11-23 08:40:26.585254: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 08:40:26.842073: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 08:40:28.497501: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 08:40:28.497710: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 08:40:28.497730: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 6
Corresponding xs for GT ys max: tensor([-0.8277,  0.0049,  0.7464, -1.4207, -0.6170, -0.0061, -0.1214, -0.6941,
        -2.3449, -0.4495, -1.0919,  0.1451, -0.3859,  2.0646, -0.0969,  2.0738,
         0.5421, -1.0826,  1.2207, -0.6858, -0.9039,  1.0050,  1.5988, -1.0973,
         0.2912,  1.6915,  0.5386, -0.4064, -1.6718,  0.0396,  0.5460, -0.1224],
       device='cuda:0')
sum of x entries: -1.5179498195648193
RESULT torch.Size([10])
logp: 0.5569677948951721
QED: 0.846062421798706
SA: 0.08579228818416595
Solution: 0.9326162338256836
normalized output: 0.9041327238082886
none
tensor(0.8461, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([5.5697e-01, 8.4606e-01, 8.5792e-02, 4.8241e-01, 2.9007e-02, 4.9802e-07,
        8.5963e-08, 2.0837e-07, 1.2210e-07, 4.3625e-01], device='cuda:0')
1469983670
compound
8000
2023-11-23 08:47:10.755991: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 08:47:11.016216: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 08:47:12.877563: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 08:47:12.877775: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 08:47:12.877796: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 6
Corresponding xs for GT ys max: tensor([-0.8296,  0.0115,  0.7353, -1.6513, -0.4533,  0.0378, -0.1439, -0.6871,
        -2.5621, -0.2566, -1.0683,  0.0984, -0.3218,  2.1784, -0.0794,  2.1691,
         0.6401, -1.1210,  1.2989, -0.4796, -1.0532,  0.9080,  1.5772, -1.1463,
         0.1862,  1.7345,  0.7145, -0.3033, -1.6790,  0.1111,  0.4678, -0.0963],
       device='cuda:0')
sum of x entries: -1.0636930465698242
RESULT torch.Size([10])
logp: 0.5651772022247314
QED: 0.8446563482284546
SA: 0.07800289243459702
Solution: 0.9326162338256836
normalized output: 0.9077445268630981
none
tensor(0.8493, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([5.6518e-01, 8.4466e-01, 7.8003e-02, 4.8914e-01, 2.5566e-02, 2.6553e-07,
        4.0107e-08, 1.0659e-07, 5.8185e-08, 4.2892e-01], device='cuda:0')
1469983670
compound
9000
2023-11-23 08:53:56.895699: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 08:53:57.110635: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 08:53:58.491271: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 08:53:58.491466: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 08:53:58.491483: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 6
Corresponding xs for GT ys max: tensor([-0.8797,  0.0348,  0.8041, -1.7643, -0.3318,  0.0501, -0.1071, -0.6875,
        -2.7538, -0.1740, -1.0564,  0.0803, -0.3087,  2.2129, -0.0874,  2.2584,
         0.7206, -1.1513,  1.3452, -0.3083, -1.1399,  0.9151,  1.5761, -1.1763,
         0.1238,  1.7281,  0.8192, -0.2340, -1.6997,  0.1907,  0.4196, -0.0092],
       device='cuda:0')
sum of x entries: -0.5903265476226807
RESULT torch.Size([10])
logp: 0.5690293312072754
QED: 0.8474425673484802
SA: 0.0720851793885231
Solution: 0.9326162338256836
normalized output: 0.9188705682754517
none
tensor(0.8594, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([5.6903e-01, 8.4744e-01, 7.2085e-02, 4.9196e-01, 2.2989e-02, 1.6021e-07,
        2.2172e-08, 6.2193e-08, 3.2572e-08, 4.2429e-01], device='cuda:0')
1469983670
compound
10000
2023-11-23 09:00:42.443905: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 09:00:42.692550: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 09:00:44.091512: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 09:00:44.091802: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 09:00:44.091838: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 6
Corresponding xs for GT ys max: tensor([-0.8766,  0.0570,  0.8675, -1.8868, -0.2462,  0.0438, -0.0897, -0.7266,
        -2.9232, -0.1061, -1.0693,  0.0402, -0.2702,  2.2116, -0.0725,  2.3337,
         0.7883, -1.1674,  1.3869, -0.1793, -1.2274,  0.9224,  1.5900, -1.2227,
         0.0535,  1.7206,  0.8933, -0.2363, -1.6941,  0.2717,  0.3530,  0.0370],
       device='cuda:0')
sum of x entries: -0.42395496368408203
RESULT torch.Size([10])
logp: 0.5735359787940979
QED: 0.8511086702346802
SA: 0.06816922128200531
Solution: 0.9326162338256836
normalized output: 0.9299750328063965
none
tensor(0.8694, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([5.7354e-01, 8.5111e-01, 6.8169e-02, 4.9100e-01, 2.0984e-02, 1.0675e-07,
        1.3629e-08, 4.0125e-08, 2.0332e-08, 4.2243e-01], device='cuda:0')
1469983670
compound
20000
2023-11-23 09:07:28.037667: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 09:07:28.292083: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 09:07:29.676115: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 09:07:29.676350: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 09:07:29.676371: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 78
Corresponding xs for GT ys max: tensor([-1.0551,  0.2997, -0.1360, -2.4695, -1.0641, -1.2783, -1.9903, -1.9285,
        -1.3275,  0.7622, -1.4593, -1.1286, -0.4578,  2.3021, -0.9463,  2.8529,
         0.7880, -2.0504,  2.9505, -0.9402, -0.9409,  0.5327,  1.3005, -0.0485,
         0.3587,  0.6160,  1.9448, -0.2401,  0.5629, -0.0850, -1.1846,  0.2538],
       device='cuda:0')
sum of x entries: -5.2062554359436035
RESULT torch.Size([10])
logp: 0.616053581237793
QED: 0.8761404752731323
SA: 0.04993065074086189
Solution: 0.9326162338256836
normalized output: 0.9725530743598938
none
tensor(0.9078, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([6.1605e-01, 8.7614e-01, 4.9931e-02, 5.2349e-01, 1.2910e-02, 1.1147e-08,
        1.0302e-09, 3.9269e-09, 1.7543e-09, 4.3783e-01], device='cuda:0')
1469983670
compound
30000
2023-11-23 09:14:14.732502: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 09:14:14.986813: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 09:14:16.408190: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 09:14:16.408409: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 09:14:16.408428: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 44
Corresponding xs for GT ys max: tensor([ 4.4097e-01, -7.7318e-01, -5.3753e-01, -4.2018e+00, -7.9588e-01,
         1.5607e-01, -8.7801e-01, -3.6995e-01, -3.6631e+00,  6.4998e-01,
        -1.3387e+00,  7.7237e-02, -1.2318e+00,  1.2717e+00, -1.1627e+00,
         2.5887e+00,  1.0786e+00,  8.6874e-01,  9.0088e-01, -2.9004e+00,
        -1.5945e+00, -4.1799e-03,  7.3606e-01, -1.8006e+00,  1.3743e+00,
         2.0752e+00,  1.2261e+00, -9.4551e-01,  6.0659e-02,  6.0308e-01,
        -1.9285e+00,  1.2857e-01], device='cuda:0')
sum of x entries: -9.889410972595215
RESULT torch.Size([10])
logp: 0.6510851979255676
QED: 0.8845987319946289
SA: 0.03759219869971275
Solution: 0.9326162338256836
normalized output: 0.9693466424942017
none
tensor(0.9049, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([6.5109e-01, 8.8460e-01, 3.7592e-02, 5.1953e-01, 6.8118e-03, 1.0957e-09,
        5.2948e-11, 2.8993e-10, 1.0802e-10, 4.2734e-01], device='cuda:0')
1469983670
compound
40000
2023-11-23 09:20:56.935664: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 09:20:57.122054: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 09:20:58.515209: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 09:20:58.515404: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 09:20:58.515442: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 78
Corresponding xs for GT ys max: tensor([-0.0351,  0.0945, -0.3305, -4.9406, -2.6346, -0.5049, -2.4500, -1.6475,
        -2.2485,  0.9564, -1.7244, -0.2810, -1.3769,  3.2088, -0.5611,  2.8735,
         1.4921, -0.3401,  2.9954, -1.1497, -0.8901,  0.3617,  0.7921, -0.2428,
         0.6685,  1.0528,  2.0107, -0.6282,  1.5363, -0.6855, -2.0756,  0.5859],
       device='cuda:0')
sum of x entries: -6.118104934692383
RESULT torch.Size([10])
logp: 0.695203423500061
QED: 0.8671479225158691
SA: 0.02756490185856819
Solution: 0.9326162338256836
normalized output: 0.9712053537368774
none
tensor(0.9066, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([6.9520e-01, 8.6715e-01, 2.7565e-02, 5.2282e-01, 5.0893e-03, 1.7273e-10,
        4.5589e-12, 4.1097e-11, 1.1132e-11, 4.3107e-01], device='cuda:0')
1469983670
compound
50000
2023-11-23 09:27:33.884165: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 09:27:34.105976: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 09:27:35.457670: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 09:27:35.457857: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 09:27:35.457873: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 7
Corresponding xs for GT ys max: tensor([ 0.7697, -1.0459, -0.2998, -4.1338, -1.0301,  2.0061, -1.9756, -1.6768,
        -4.3085,  1.6781, -1.3186,  1.1611, -1.6119,  2.1295, -0.7735,  2.3500,
         0.6933,  1.3705,  1.9501, -0.7000, -0.9816,  0.9053, -0.9784, -1.1472,
         1.0804,  3.0872,  2.8554, -0.8237,  2.0630, -0.7601, -2.3762,  1.5596],
       device='cuda:0')
sum of x entries: -0.2823810577392578
RESULT torch.Size([10])
logp: 0.6645470857620239
QED: 0.9103971719741821
SA: 0.03054424189031124
Solution: 0.9326162338256836
normalized output: 0.986051082611084
none
tensor(0.9200, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([6.6455e-01, 9.1040e-01, 3.0544e-02, 5.0938e-01, 4.2260e-03, 1.5381e-10,
        4.0129e-12, 3.2623e-11, 8.4862e-12, 4.9147e-01], device='cuda:0')
1469983670
compound
60000
2023-11-23 09:34:21.860164: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 09:34:22.076993: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 09:34:23.502752: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 09:34:23.502941: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 09:34:23.502956: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 69
Corresponding xs for GT ys max: tensor([ 1.3281,  0.0435, -1.2615, -4.4534, -0.6330, -0.2150, -1.1719, -0.6019,
        -3.8557,  1.7059, -1.5545,  0.8430, -0.6893,  2.6617, -0.1967,  3.7325,
         0.2084,  1.3075,  2.0320, -2.4711, -2.6361, -0.6200,  1.7184, -1.0897,
         2.2450,  2.3662,  1.7033, -1.1231,  1.5310, -0.1939, -1.9681, -0.4135],
       device='cuda:0')
sum of x entries: -1.7221295833587646
RESULT torch.Size([10])
logp: 0.6897374987602234
QED: 0.8926330208778381
SA: 0.018390340730547905
Solution: 0.9326162338256836
normalized output: 0.9962610602378845
none
tensor(0.9292, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([6.8974e-01, 8.9263e-01, 1.8390e-02, 5.3309e-01, 2.8416e-03, 1.7255e-11,
        3.1515e-13, 3.3328e-12, 8.6034e-13, 4.2864e-01], device='cuda:0')
1469983670
compound
70000
2023-11-23 09:40:57.892804: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 09:40:58.148341: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 09:40:59.637587: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 09:40:59.637828: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 09:40:59.637872: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 162
Corresponding xs for GT ys max: tensor([ 1.6569, -1.0305, -0.2405, -5.6680, -0.2358,  1.4565, -0.3796, -2.6036,
        -3.7063,  2.2364, -2.0098,  1.6125, -3.3136,  2.7764, -1.3914,  2.6627,
        -0.5250,  1.2372,  2.3120, -0.2342, -0.8316,  0.1544, -0.8354, -2.7065,
         0.1881,  3.7081,  2.2523, -0.6796,  0.0678, -1.3515, -1.0062,  0.5725],
       device='cuda:0')
sum of x entries: -5.8552446365356445
RESULT torch.Size([10])
logp: 0.6979522109031677
QED: 0.9123679995536804
SA: 0.01941346935927868
Solution: 0.9326162338256836
normalized output: 1.001535415649414
none
tensor(0.9340, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([6.9795e-01, 9.1237e-01, 1.9413e-02, 5.2229e-01, 2.5025e-03, 1.0078e-11,
        1.7706e-13, 1.9131e-12, 4.5039e-13, 4.3995e-01], device='cuda:0')
1469983670
compound
80000
2023-11-23 09:47:44.262513: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 09:47:44.491866: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 09:47:45.943368: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 09:47:45.943599: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 09:47:45.943620: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 188
Corresponding xs for GT ys max: tensor([ 1.9496,  0.1210, -2.2686, -4.8171,  0.3165,  1.3473,  1.0047, -0.0382,
        -5.6786,  1.6600, -0.9321,  0.5382, -2.4694,  1.6990, -1.1594,  3.7551,
         0.2035,  2.7233,  2.9017, -2.7601, -2.2838, -1.0965, -1.5953, -1.2824,
         1.3106,  1.3673,  2.1200, -1.9780,  0.9397, -0.6836, -1.3702,  0.5218],
       device='cuda:0')
sum of x entries: -5.9343791007995605
RESULT torch.Size([10])
logp: 0.6979506015777588
QED: 0.8924593329429626
SA: 0.021064089611172676
Solution: 0.9326162338256836
normalized output: 0.9905204176902771
none
tensor(0.9241, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([6.9795e-01, 8.9246e-01, 2.1064e-02, 5.2431e-01, 2.6359e-03, 1.6839e-11,
        2.6378e-13, 2.9523e-12, 7.3151e-13, 4.3212e-01], device='cuda:0')
1469983670
compound
90000
2023-11-23 09:54:30.323184: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 09:54:30.555996: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 09:54:31.934870: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 09:54:31.935255: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 09:54:31.935321: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 0
Corresponding xs for GT ys max: tensor([ 3.3225, -0.7325, -2.3862, -6.2709, -0.8043,  3.9059,  1.4379, -1.4105,
        -5.7232,  2.9470, -2.5704,  0.0816, -3.8841,  2.2701, -1.8436,  1.7559,
        -0.9885,  1.4205,  1.0876, -2.6835, -0.3606, -0.1107, -1.1906, -0.4316,
         1.0963,  2.7806,  2.8334, -1.2072,  0.2524, -1.9992, -2.2810,  0.7779],
       device='cuda:0')
sum of x entries: -10.909058570861816
RESULT torch.Size([10])
logp: 0.7067407369613647
QED: 0.9009281992912292
SA: 0.01599154993891716
Solution: 0.9326162338256836
normalized output: 0.9958615899085999
none
tensor(0.9289, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([7.0674e-01, 9.0093e-01, 1.5992e-02, 5.3463e-01, 1.6875e-03, 2.2434e-12,
        2.2497e-14, 3.5160e-13, 6.6238e-14, 4.4510e-01], device='cuda:0')
1469983670
compound
100000
2023-11-23 10:01:14.159637: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 10:01:14.417325: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 10:01:15.709160: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 10:01:15.709358: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 10:01:15.709374: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([ 1.6174, -0.9984, -2.5962, -4.2441, -0.1678,  1.9325, -0.5178, -0.8230,
        -5.6663,  1.9566, -1.2193,  0.9178, -2.4339,  1.7913, -0.8242,  3.3590,
         0.5536,  2.1888,  2.3567, -2.2188, -0.7950,  0.2258, -1.8878, -1.4181,
         1.3352,  3.7244,  3.1944, -1.4238,  1.3586, -1.2588, -2.8471,  0.9614],
       device='cuda:0')
sum of x entries: -3.8669910430908203
RESULT torch.Size([10])
logp: 0.6971211433410645
QED: 0.9205978512763977
SA: 0.02185000479221344
Solution: 0.9326162338256836
normalized output: 0.9993979334831238
none
tensor(0.9321, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([6.9712e-01, 9.2060e-01, 2.1850e-02, 5.1067e-01, 2.4100e-03, 1.5611e-11,
        2.4872e-13, 2.7194e-12, 6.0073e-13, 4.7522e-01], device='cuda:0')
1469983670
compound
200000
2023-11-23 10:08:00.341655: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 10:08:00.530186: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 10:08:01.896453: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 10:08:01.896634: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 10:08:01.896649: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([ 3.7072,  0.0483, -3.1658, -6.8301, -0.2179,  4.5502,  2.0110, -1.6412,
        -6.0983,  3.4287, -3.0137,  0.2459, -4.8282,  2.2279, -3.1696,  1.0959,
        -0.6503,  2.6623,  1.6972, -3.7338, -0.2569, -0.2505, -1.6879,  0.1247,
         1.6371,  2.3647,  3.6657, -1.8784,  0.5003, -2.6489, -2.7959,  1.3028],
       device='cuda:0')
sum of x entries: -11.597188949584961
RESULT torch.Size([10])
logp: 0.7196215391159058
QED: 0.9185572266578674
SA: 0.011548108421266079
Solution: 0.9326162338256836
normalized output: 1.0208172798156738
none
tensor(0.9514, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([7.1962e-01, 9.1856e-01, 1.1548e-02, 5.2499e-01, 8.2008e-04, 1.4964e-13,
        7.4054e-16, 1.7317e-14, 2.4567e-15, 4.5953e-01], device='cuda:0')
1469983670
compound
300000
2023-11-23 10:14:39.362707: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 10:14:39.603078: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 10:14:40.963696: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 10:14:40.963891: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 10:14:40.963908: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 158
Corresponding xs for GT ys max: tensor([ 4.4860,  1.5467, -1.4602, -8.9681, -3.1672,  5.1992,  1.8827,  0.5223,
        -2.5172,  4.4572, -5.0197,  0.3562, -3.6570,  4.6064, -4.2074, -0.9636,
        -0.5536,  3.2404,  3.8913, -4.1115,  0.4662, -2.0194,  1.9396,  1.1616,
         1.4815,  0.6284,  2.5333, -1.9664,  0.0120, -4.1034, -0.9509,  1.3275],
       device='cuda:0')
sum of x entries: -3.9270176887512207
RESULT torch.Size([10])
logp: 0.7486479878425598
QED: 0.8723506927490234
SA: 0.009572012349963188
Solution: 0.9326162338256836
normalized output: 1.0010744333267212
none
tensor(0.9336, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([7.4865e-01, 8.7235e-01, 9.5720e-03, 4.9022e-01, 5.6710e-04, 2.4491e-14,
        4.1711e-17, 2.0894e-15, 1.9019e-16, 4.2826e-01], device='cuda:0')
1469983670
compound
400000
2023-11-23 10:21:23.651321: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 10:21:23.907642: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 10:21:25.231818: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 10:21:25.232016: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 10:21:25.232032: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 166
Corresponding xs for GT ys max: tensor([ 4.9207,  1.7196, -3.9760, -7.6770, -0.5460,  4.5024,  3.9490, -0.4491,
        -7.0465,  3.0523, -3.8040,  0.6932, -5.1708,  1.0902, -2.5738,  0.8216,
         0.2902,  4.1877,  1.9324, -6.0028, -0.1193, -0.5313, -2.2506,  1.6289,
         2.0858,  0.1101,  2.5939, -2.8596,  1.4475, -2.7820, -2.2020,  1.3305],
       device='cuda:0')
sum of x entries: -11.634580612182617
RESULT torch.Size([10])
logp: 0.7357363104820251
QED: 0.8845810890197754
SA: 0.011188930831849575
Solution: 0.9326162338256836
normalized output: 1.0277726650238037
none
tensor(0.9577, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([7.3574e-01, 8.8458e-01, 1.1189e-02, 4.7245e-01, 6.4206e-04, 8.1042e-14,
        2.1092e-16, 7.1711e-15, 8.5061e-16, 4.2246e-01], device='cuda:0')
1469983670
compound
500000
2023-11-23 10:28:07.160090: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 10:28:07.389323: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 10:28:08.787293: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 10:28:08.787556: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 10:28:08.787588: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 19
Corresponding xs for GT ys max: tensor([ 3.2768,  0.3430,  1.3590, -4.8105, -2.2971,  4.5952,  0.1054, -0.1291,
        -6.3533,  3.8160, -1.7327,  0.0996, -5.6399,  2.4231, -0.3373,  1.8358,
        -1.3053,  4.2974,  0.8765, -2.2836,  0.1652,  0.8567, -5.7459, -0.0834,
         3.8902,  1.7102,  3.0521, -2.9289,  3.2993, -2.1668, -5.9391,  2.3307],
       device='cuda:0')
sum of x entries: -3.420665979385376
RESULT torch.Size([10])
logp: 0.7120781540870667
QED: 0.9387543797492981
SA: 0.024649137631058693
Solution: 0.9326162338256836
normalized output: 1.0318948030471802
none
tensor(0.9614, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([7.1208e-01, 9.3875e-01, 2.4649e-02, 4.4506e-01, 1.0147e-03, 2.1766e-12,
        9.2779e-15, 2.0301e-13, 2.1990e-14, 5.7277e-01], device='cuda:0')
1469983670
compound
600000
2023-11-23 10:34:42.205042: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 10:34:42.464616: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 10:34:43.792330: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 10:34:43.792533: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 10:34:43.792551: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 19
Corresponding xs for GT ys max: tensor([ 3.6741,  0.7238,  0.9387, -5.1615, -2.4505,  5.3283,  0.3733, -0.1868,
        -6.6625,  4.1434, -1.6261, -0.0313, -6.4532,  2.2668, -0.3001,  1.6269,
        -1.6644,  4.5552,  0.8042, -3.0030,  0.5524,  1.8107, -5.8042, -0.0840,
         4.5611,  1.0918,  3.2261, -3.2535,  3.4788, -2.2669, -5.8924,  2.6384],
       device='cuda:0')
sum of x entries: -3.0462822914123535
RESULT torch.Size([10])
logp: 0.7175382971763611
QED: 0.9425992369651794
SA: 0.02195894718170166
Solution: 0.9326162338256836
normalized output: 1.0279645919799805
none
tensor(0.9579, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([7.1754e-01, 9.4260e-01, 2.1959e-02, 4.3532e-01, 7.3370e-04, 7.2936e-13,
        2.3196e-15, 5.9746e-14, 5.8368e-15, 5.7454e-01], device='cuda:0')
1469983670
compound
700000
2023-11-23 10:41:26.146095: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 10:41:26.407408: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 10:41:27.869054: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 10:41:27.869262: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 10:41:27.869300: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 119
Corresponding xs for GT ys max: tensor([ 6.6313,  2.4228, -1.7743, -7.8556, -2.9787,  5.5565,  2.7421, -2.5482,
        -5.9710,  5.1475, -4.6973, -1.1964, -6.9367,  2.5648, -4.2138, -0.0538,
        -2.1061,  3.0114,  1.8788, -3.9624,  1.5586, -1.0182, -2.6563,  0.6907,
         2.0035, -0.3085,  3.0447, -3.5198,  1.5785, -3.8958, -4.5476,  1.4127],
       device='cuda:0')
sum of x entries: -19.996463775634766
RESULT torch.Size([10])
logp: 0.7473114132881165
QED: 0.9149290919303894
SA: 0.010987905785441399
Solution: 0.9326162338256836
normalized output: 1.0052216053009033
none
tensor(0.9373, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([7.4731e-01, 9.1493e-01, 1.0988e-02, 4.8692e-01, 3.9669e-04, 1.5238e-14,
        1.7459e-17, 1.0362e-15, 6.3827e-17, 5.5144e-01], device='cuda:0')
1469983670
compound
800000
2023-11-23 10:48:08.055669: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 10:48:08.252337: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 10:48:09.750462: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 10:48:09.750691: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 10:48:09.750707: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 188
Corresponding xs for GT ys max: tensor([ 5.2136,  4.5707, -2.0063, -9.9689, -1.6819,  5.0159,  3.9187,  1.6825,
        -2.7571,  3.2684, -4.4005, -1.3912, -5.1931,  4.1848, -3.1894, -2.3025,
        -0.0929,  3.9710,  2.7885, -5.3719, -1.1430, -0.9548,  0.5937,  2.1887,
         3.1836, -0.2541,  0.8809, -3.6708, -0.1577, -4.0058, -1.2248,  0.6675],
       device='cuda:0')
sum of x entries: -7.637724876403809
RESULT torch.Size([10])
logp: 0.7424304485321045
QED: 0.8468698263168335
SA: 0.016950402408838272
Solution: 0.9326162338256836
normalized output: 1.0162864923477173
none
tensor(0.9473, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([7.4243e-01, 8.4687e-01, 1.6950e-02, 4.5811e-01, 5.7604e-04, 8.6791e-14,
        1.1413e-16, 6.2726e-15, 5.2413e-16, 4.3688e-01], device='cuda:0')
1469983670
compound
900000
2023-11-23 10:54:44.004331: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 10:54:44.211137: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 10:54:45.689478: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 10:54:45.689675: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 10:54:45.689692: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 179
Corresponding xs for GT ys max: tensor([ 6.8765,  3.4064, -4.0301, -8.4643, -2.6936,  5.0310,  4.8054,  0.4709,
        -6.0437,  5.0937, -3.9484, -0.2945, -6.4925,  1.6231, -4.0178, -1.5451,
        -2.1047,  3.5279,  2.1129, -5.4239,  1.4192, -0.5033, -1.8639,  1.9958,
         3.5892, -1.9896,  0.8285, -3.5969, -0.1011, -3.0706, -1.6357,  2.2054],
       device='cuda:0')
sum of x entries: -14.833603858947754
RESULT torch.Size([10])
logp: 0.7192533016204834
QED: 0.8696103692054749
SA: 0.017174527049064636
Solution: 0.9326162338256836
normalized output: 1.0066442489624023
none
tensor(0.9386, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([7.1925e-01, 8.6961e-01, 1.7175e-02, 4.8071e-01, 5.4640e-04, 8.8889e-14,
        9.5366e-17, 5.8261e-15, 3.7670e-16, 5.4521e-01], device='cuda:0')
1469983670
compound
1000000
2023-11-23 11:01:20.846792: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 11:01:21.105303: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 11:01:22.498606: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 11:01:22.498865: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 11:01:22.498893: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 217
Corresponding xs for GT ys max: tensor([ 6.6733,  3.0781, -1.4860, -7.3822, -3.3955,  6.3376,  2.9925, -1.9249,
        -6.0636,  5.1297, -5.1038, -1.4298, -6.9183,  3.2146, -4.2957, -0.7963,
        -2.1484,  3.3850,  2.2390, -4.3233,  1.6132, -0.6928, -3.9657,  1.3868,
         2.5111, -0.3327,  2.9527, -3.8159,  1.4879, -3.9923, -5.2448,  1.3323],
       device='cuda:0')
sum of x entries: -18.9783992767334
RESULT torch.Size([10])
logp: 0.7282377481460571
QED: 0.94725501537323
SA: 0.012276547029614449
Solution: 0.9326162338256836
normalized output: 1.0162140130996704
none
tensor(0.9473, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([7.2824e-01, 9.4726e-01, 1.2277e-02, 5.0947e-01, 3.3902e-04, 1.3995e-14,
        2.2969e-17, 1.0003e-15, 7.4203e-17, 5.7558e-01], device='cuda:0')
1469983670
compound
1200000
2023-11-23 11:08:04.504464: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 11:08:04.699744: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 11:08:06.127741: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 11:08:06.127970: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 11:08:06.127994: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 19
Corresponding xs for GT ys max: tensor([ 6.0316,  2.3268, -2.6670, -7.8908, -2.8726,  6.7832,  3.1486, -0.3320,
        -6.0322,  5.3842, -4.3314, -1.1990, -7.4334,  2.6435, -3.5006, -1.6992,
        -2.5481,  3.3509,  2.1814, -4.3410,  2.3565,  0.1141, -3.6976,  2.2317,
         4.1024, -0.8739,  1.7880, -3.5183,  1.9788, -3.7408, -4.9583,  3.1652],
       device='cuda:0')
sum of x entries: -14.049334526062012
RESULT torch.Size([10])
logp: 0.7186947464942932
QED: 0.9270510673522949
SA: 0.017376737669110298
Solution: 0.9326162338256836
normalized output: 1.0276715755462646
none
tensor(0.9576, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([7.1869e-01, 9.2705e-01, 1.7377e-02, 5.3830e-01, 4.5509e-04, 5.4733e-14,
        8.2975e-17, 3.9609e-15, 2.7902e-16, 6.0796e-01], device='cuda:0')
1469983670
compound
1400000
2023-11-23 11:14:41.035802: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 11:14:41.262002: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 11:14:42.656426: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 11:14:42.656611: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 11:14:42.656626: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 66
Corresponding xs for GT ys max: tensor([ 5.8291,  0.4793,  0.0408, -5.3677, -1.4017,  4.6414,  0.5951, -0.4667,
        -7.3260,  4.4877, -2.8656,  0.2618, -6.3552,  3.0269, -0.7355,  0.0668,
        -1.1396,  3.1717,  0.6910, -1.8764,  0.1833, -1.4834, -2.9846, -0.9009,
         2.2994, -0.4828,  2.1716, -3.0754, -0.2035, -1.6752, -5.0852,  0.9316],
       device='cuda:0')
sum of x entries: -14.548035621643066
RESULT torch.Size([10])
logp: 0.7250391244888306
QED: 0.9055286049842834
SA: 0.025495300069451332
Solution: 0.9326162338256836
normalized output: 1.0270075798034668
none
tensor(0.9570, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([7.2504e-01, 9.0553e-01, 2.5495e-02, 4.7987e-01, 1.1683e-03, 2.1276e-12,
        6.2097e-15, 1.9621e-13, 1.6539e-14, 5.7555e-01], device='cuda:0')
1469983670
compound
1600000
2023-11-23 11:21:19.377176: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 11:21:19.592026: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 11:21:21.117604: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 11:21:21.117823: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 11:21:21.117841: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 51
Corresponding xs for GT ys max: tensor([  9.4066,  -0.9410,  -2.0504,  -8.8211,  -0.4357,   0.2444,  -4.1180,
         -2.8632, -10.5358,   3.2950, -13.2784,   0.4626,  -2.5276,  -3.0778,
          0.5984,  15.5877,   6.1412,   7.2921,   6.8623, -13.1516,  -1.9429,
          1.0679,   2.5745,   2.7924,  -1.1145,   6.8713,   3.5924,  -1.1909,
          4.7497,  -5.6385,  -6.1636,  -0.0533], device='cuda:0')
sum of x entries: -6.3658294677734375
RESULT torch.Size([10])
logp: 0.9143044352531433
QED: 0.9953932762145996
SA: 7.23432549420977e-06
Solution: 0.9326162338256836
normalized output: 1.0746344327926636
none
tensor(1., device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([9.1430e-01, 9.9539e-01, 7.2343e-06, 5.0655e-01, 9.9101e-08, 5.6682e-31,
        8.9872e-36, 6.5395e-33, 1.6878e-34, 1.4940e-01], device='cuda:0')
1469983670
compound
1800000
2023-11-23 11:27:58.120997: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 11:27:58.362421: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 11:27:59.667569: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 11:27:59.667767: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 11:27:59.667785: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 55
Corresponding xs for GT ys max: tensor([  4.9726,  -5.3090,  -2.5169, -13.9315,  -8.5582,   1.0719,  -6.9341,
          2.5213,  -4.9894,   4.0060,  -4.7061,   6.1674, -10.3277,   9.6817,
          0.7725,  11.2052,   3.3933,   3.6677,  11.2012,   1.7603,  -3.9366,
          5.8803,   0.6343, -10.8743,   2.8026,   7.1808,   2.9909,  -0.9625,
         -1.9733,  -0.9187,  -7.2701,   0.2429], device='cuda:0')
sum of x entries: -3.0556392669677734
RESULT torch.Size([10])
logp: 0.9418995976448059
QED: 0.9984992742538452
SA: 1.2373488061712123e-05
Solution: 0.9326162338256836
normalized output: 1.074634313583374
none
tensor(1.0000, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([9.4190e-01, 9.9850e-01, 1.2373e-05, 4.5553e-01, 1.6332e-08, 2.1983e-33,
        4.4800e-39, 9.9729e-36, 1.1105e-37, 2.2914e-01], device='cuda:0')
1469983670
compound
2000000
2023-11-23 11:34:40.924587: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 11:34:41.160806: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 11:34:42.535490: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 11:34:42.535688: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 11:34:42.535703: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 222
Corresponding xs for GT ys max: tensor([  7.6525,   5.5006,   5.9663,  -6.0125,  -0.4992,  -3.5412, -10.6122,
          0.2299,  -8.9895,   8.9293, -15.6802,  -2.5773, -10.9643,  -6.0695,
          1.8799,  13.0935,   3.1607,   7.7399,   8.0774,  -3.9855,   1.0334,
          3.2025,   5.8124,  -9.0098,  -2.3579,   3.3877,   0.5283,  -0.6092,
         -2.8389,   2.2648,   7.0530,  -3.6130], device='cuda:0')
sum of x entries: -1.8480682373046875
RESULT torch.Size([10])
logp: 0.9198372960090637
QED: 0.9951974749565125
SA: 1.7223324903170578e-05
Solution: 0.9326162338256836
normalized output: 1.074633240699768
none
tensor(1.0000, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([9.1984e-01, 9.9520e-01, 1.7223e-05, 2.8264e-01, 1.0468e-07, 1.9849e-30,
        1.0691e-35, 1.3730e-32, 2.4617e-34, 1.5837e-01], device='cuda:0')
1469983670
compound
2500000
2023-11-23 11:41:20.877667: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 11:41:21.130900: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 11:41:22.599919: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 11:41:22.600180: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 11:41:22.600247: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 23
Corresponding xs for GT ys max: tensor([ 6.4714e+00,  8.5901e+00,  1.5152e+00, -7.2691e-01, -7.1983e+00,
        -3.7773e+00, -4.6862e+00, -1.1201e+00, -1.4569e+01,  3.1167e+00,
        -1.2944e+01, -4.7510e+00, -5.9864e+00,  9.5078e+00, -2.7170e+00,
         1.3243e+01,  4.5714e+00, -2.2528e+00,  1.4771e+01, -5.7812e+00,
        -1.5689e-02,  2.7967e+00,  1.2315e+00,  2.5495e+00, -3.8550e+00,
         6.0465e+00,  4.1050e+00,  5.8972e-03,  8.9630e-01, -2.8455e+00,
        -8.7845e+00,  2.9176e+00], device='cuda:0')
sum of x entries: 0.32489585876464844
RESULT torch.Size([10])
logp: 0.9295257329940796
QED: 0.9990307092666626
SA: 4.042674390802858e-06
Solution: 0.9326162338256836
normalized output: 1.0745631456375122
none
tensor(0.9999, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([9.2953e-01, 9.9903e-01, 4.0427e-06, 5.7352e-01, 3.1098e-08, 1.4638e-33,
        4.2492e-39, 1.1014e-35, 6.2820e-38, 4.4767e-01], device='cuda:0')
1469983670
compound
3000000
2023-11-23 11:48:07.570621: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 11:48:07.806834: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 11:48:09.306291: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 11:48:09.306512: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 11:48:09.306534: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 239
Corresponding xs for GT ys max: tensor([  5.9983,  -2.4008,  10.3024, -17.2146, -10.9041,   1.6882, -10.8949,
          0.4242,  -6.5245,   6.1069, -10.4128,   2.2200,  -8.6680,   8.6131,
         -0.5646,   8.8229,   6.1446,   0.8881,   8.4397,  -5.9235,  -7.0384,
          6.6958,   0.7850, -13.8905,  -2.2091,   8.7021,   2.3579,  -0.2182,
        -10.5996,   3.6647,  -3.9680,   1.0416], device='cuda:0')
sum of x entries: -28.536087036132812
RESULT torch.Size([10])
logp: 0.9548656344413757
QED: 0.9994620680809021
SA: 1.7549222093293793e-06
Solution: 0.9326162338256836
normalized output: 1.0746344327926636
none
tensor(1., device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([9.5487e-01, 9.9946e-01, 1.7549e-06, 6.1241e-01, 9.7708e-10, 1.1205e-38,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 9.5958e-02], device='cuda:0')
1469983670
compound
4000000
2023-11-23 11:54:54.451567: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 11:54:54.639142: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 11:54:55.992869: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 11:54:55.993086: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 11:54:55.993114: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 239
Corresponding xs for GT ys max: tensor([ 1.0668e+01,  1.4456e+00,  6.1777e+00, -2.2388e+01, -8.5324e-02,
         2.2906e+00, -3.5745e+00,  3.7891e-03, -1.3545e+00,  7.3469e-01,
        -1.4306e+01, -2.5248e+00, -1.6702e+00,  1.0028e+01, -1.6650e+00,
         1.7749e+01, -6.4564e-01,  4.0890e+00,  3.2541e+00, -6.5958e+00,
        -9.3577e+00,  8.7519e+00,  2.4321e+00, -1.8042e+01, -1.2603e+00,
         1.1467e+01,  5.3128e+00, -2.3719e+00, -6.7497e+00,  3.3907e+00,
         4.6779e+00, -6.5695e+00], device='cuda:0')
sum of x entries: -6.687577247619629
RESULT torch.Size([10])
logp: 0.9740867614746094
QED: 0.9955464601516724
SA: 1.347989041278197e-06
Solution: 0.9326162338256836
normalized output: 1.0746344327926636
none
tensor(1., device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([9.7409e-01, 9.9555e-01, 1.3480e-06, 4.6830e-01, 7.2872e-10, 6.0327e-39,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.7386e-02], device='cuda:0')
1469983670
compound
5000000
2023-11-23 12:01:30.349767: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 12:01:30.572804: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 12:01:31.919342: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 12:01:31.919554: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 12:01:31.919572: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 9
Corresponding xs for GT ys max: tensor([ -3.4374,   5.7045,   3.2685, -13.3643,  -6.2379,  -8.7713,   0.0743,
         -4.8421, -15.9848,  13.8579,  -7.4252,  -0.6490, -11.1403,   0.8151,
         -0.4528,   9.4849,  -2.7733, -12.3457,  10.4016,   2.9168,  -1.5172,
         14.5837,   4.6591,  -2.6468,  13.5327,   5.8747,   6.7862,  -2.2411,
         -4.3756,   1.9269,  -5.3426,  12.2119], device='cuda:0')
sum of x entries: 2.5515213012695312
RESULT torch.Size([10])
logp: 0.9091777205467224
QED: 0.9999773502349854
SA: 3.4201977996417554e-06
Solution: 0.9326162338256836
normalized output: 1.0746344327926636
none
tensor(1., device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([9.0918e-01, 9.9998e-01, 3.4202e-06, 5.4645e-01, 1.2069e-09, 6.9241e-38,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.2430e-01], device='cuda:0')
1469983670
compound
0
2023-11-23 12:08:14.430051: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 12:08:14.659212: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 12:08:16.011290: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 12:08:16.011485: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 12:08:16.011514: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6219,  0.2723, -0.8538, -0.3925,  0.3328,  0.3678,  0.1219, -0.1359,
        -0.7734,  0.2767,  0.1439, -0.1948, -0.5988,  0.3968, -0.0918,  2.1053,
         0.1883, -1.1262, -0.5506, -0.5527, -1.1478,  0.5093,  0.6161, -0.9982,
         2.1461,  0.4118,  1.0499,  0.5071,  1.1214, -0.0079, -0.6938, -1.1425],
       device='cuda:0')
sum of x entries: -0.3151973485946655
RESULT torch.Size([10])
logp: 0.48159125447273254
QED: 0.7493628859519958
SA: 0.14620281755924225
Solution: 0.9326162338256836
normalized output: 0.8657898306846619
none
tensor(0.8114, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8159e-01, 7.4936e-01, 1.4620e-01, 5.4667e-01, 6.5103e-02, 2.6806e-05,
        9.1160e-06, 1.4221e-05, 1.0898e-05, 4.0454e-01], device='cuda:0')
1469983670
compound
-1
2023-11-23 12:14:58.904760: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 12:14:59.121500: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 12:15:00.421318: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 12:15:00.421508: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 12:15:00.421526: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6219,  0.2723, -0.8538, -0.3923,  0.3328,  0.3678,  0.1219, -0.1359,
        -0.7731,  0.2765,  0.1441, -0.1948, -0.5987,  0.3966, -0.0919,  2.1051,
         0.1882, -1.1262, -0.5507, -0.5527, -1.1476,  0.5093,  0.6161, -0.9981,
         2.1462,  0.4118,  1.0499,  0.5072,  1.1214, -0.0080, -0.6939, -1.1427],
       device='cuda:0')
sum of x entries: -0.314858078956604
RESULT torch.Size([10])
logp: 0.481568306684494
QED: 0.7493696808815002
SA: 0.1462193727493286
Solution: 0.9326162338256836
normalized output: 0.8657841086387634
none
tensor(0.8114, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8157e-01, 7.4937e-01, 1.4622e-01, 5.4666e-01, 6.5108e-02, 2.6822e-05,
        9.1222e-06, 1.4229e-05, 1.0905e-05, 4.0454e-01], device='cuda:0')
1469983670
compound
-2
2023-11-23 12:21:43.917719: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 12:21:44.159217: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 12:21:45.491726: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 12:21:45.491937: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 12:21:45.491973: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6218,  0.2723, -0.8538, -0.3921,  0.3328,  0.3678,  0.1219, -0.1359,
        -0.7728,  0.2764,  0.1442, -0.1947, -0.5986,  0.3964, -0.0920,  2.1049,
         0.1882, -1.1261, -0.5507, -0.5527, -1.1475,  0.5094,  0.6162, -0.9981,
         2.1463,  0.4118,  1.0498,  0.5074,  1.1213, -0.0080, -0.6939, -1.1428],
       device='cuda:0')
sum of x entries: -0.31451892852783203
RESULT torch.Size([10])
logp: 0.48154526948928833
QED: 0.7493762373924255
SA: 0.14623592793941498
Solution: 0.9326162338256836
normalized output: 0.8657782673835754
none
tensor(0.8114, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8155e-01, 7.4938e-01, 1.4624e-01, 5.4666e-01, 6.5113e-02, 2.6837e-05,
        9.1284e-06, 1.4238e-05, 1.0912e-05, 4.0454e-01], device='cuda:0')
1469983670
compound
-3
2023-11-23 12:28:26.960823: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 12:28:27.187377: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 12:28:28.572740: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 12:28:28.572982: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 12:28:28.573011: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6218,  0.2723, -0.8539, -0.3918,  0.3328,  0.3677,  0.1219, -0.1360,
        -0.7725,  0.2762,  0.1444, -0.1947, -0.5985,  0.3963, -0.0921,  2.1047,
         0.1881, -1.1261, -0.5507, -0.5526, -1.1473,  0.5094,  0.6162, -0.9980,
         2.1463,  0.4118,  1.0498,  0.5076,  1.1212, -0.0081, -0.6940, -1.1430],
       device='cuda:0')
sum of x entries: -0.3141660690307617
RESULT torch.Size([10])
logp: 0.48152220249176025
QED: 0.7493829727172852
SA: 0.14625246822834015
Solution: 0.9326162338256836
normalized output: 0.8657724857330322
none
tensor(0.8114, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8152e-01, 7.4938e-01, 1.4625e-01, 5.4665e-01, 6.5118e-02, 2.6852e-05,
        9.1345e-06, 1.4246e-05, 1.0919e-05, 4.0453e-01], device='cuda:0')
1469983670
compound
-4
2023-11-23 12:35:11.270602: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 12:35:11.497163: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 12:35:12.923463: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 12:35:12.923657: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 12:35:12.923675: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6217,  0.2723, -0.8539, -0.3916,  0.3328,  0.3677,  0.1219, -0.1360,
        -0.7722,  0.2760,  0.1446, -0.1946, -0.5984,  0.3961, -0.0923,  2.1045,
         0.1881, -1.1260, -0.5507, -0.5526, -1.1472,  0.5095,  0.6163, -0.9979,
         2.1464,  0.4118,  1.0498,  0.5077,  1.1212, -0.0081, -0.6940, -1.1432],
       device='cuda:0')
sum of x entries: -0.3138270378112793
RESULT torch.Size([10])
logp: 0.4814991056919098
QED: 0.7493896484375
SA: 0.14626911282539368
Solution: 0.9326162338256836
normalized output: 0.8657665252685547
none
tensor(0.8114, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8150e-01, 7.4939e-01, 1.4627e-01, 5.4665e-01, 6.5123e-02, 2.6867e-05,
        9.1407e-06, 1.4254e-05, 1.0925e-05, 4.0453e-01], device='cuda:0')
1469983670
compound
-5
2023-11-23 12:41:57.301638: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 12:41:57.519552: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 12:41:58.856045: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 12:41:58.856258: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 12:41:58.856279: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6217,  0.2723, -0.8540, -0.3913,  0.3327,  0.3677,  0.1220, -0.1360,
        -0.7719,  0.2758,  0.1448, -0.1946, -0.5983,  0.3959, -0.0924,  2.1043,
         0.1880, -1.1260, -0.5507, -0.5525, -1.1471,  0.5095,  0.6163, -0.9978,
         2.1465,  0.4117,  1.0498,  0.5079,  1.1211, -0.0082, -0.6940, -1.1434],
       device='cuda:0')
sum of x entries: -0.3134799003601074
RESULT torch.Size([10])
logp: 0.4814760386943817
QED: 0.7493964433670044
SA: 0.14628569781780243
Solution: 0.9326162338256836
normalized output: 0.8657608032226562
none
tensor(0.8114, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8148e-01, 7.4940e-01, 1.4629e-01, 5.4664e-01, 6.5129e-02, 2.6883e-05,
        9.1470e-06, 1.4263e-05, 1.0932e-05, 4.0453e-01], device='cuda:0')
1469983670
compound
-10
2023-11-23 12:48:35.228642: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 12:48:35.455541: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 12:48:36.816590: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 12:48:36.816783: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 12:48:36.816812: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6215,  0.2723, -0.8541, -0.3901,  0.3326,  0.3676,  0.1221, -0.1361,
        -0.7704,  0.2750,  0.1456, -0.1943, -0.5978,  0.3950, -0.0930,  2.1033,
         0.1877, -1.1257, -0.5508, -0.5523, -1.1464,  0.5097,  0.6165, -0.9973,
         2.1468,  0.4117,  1.0497,  0.5087,  1.1208, -0.0085, -0.6942, -1.1443],
       device='cuda:0')
sum of x entries: -0.31175434589385986
RESULT torch.Size([10])
logp: 0.4813600778579712
QED: 0.7494298815727234
SA: 0.14636914432048798
Solution: 0.9326162338256836
normalized output: 0.8657315969467163
none
tensor(0.8114, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8136e-01, 7.4943e-01, 1.4637e-01, 5.4661e-01, 6.5154e-02, 2.6959e-05,
        9.1782e-06, 1.4304e-05, 1.0966e-05, 4.0452e-01], device='cuda:0')
1469983670
compound
-15
2023-11-23 12:55:19.057539: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 12:55:19.318312: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 12:55:20.802471: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 12:55:20.802679: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 12:55:20.802734: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6212,  0.2723, -0.8543, -0.3889,  0.3325,  0.3674,  0.1222, -0.1362,
        -0.7689,  0.2741,  0.1465, -0.1941, -0.5973,  0.3941, -0.0936,  2.1023,
         0.1875, -1.1254, -0.5509, -0.5521, -1.1457,  0.5099,  0.6168, -0.9969,
         2.1472,  0.4116,  1.0496,  0.5095,  1.1204, -0.0088, -0.6945, -1.1452],
       device='cuda:0')
sum of x entries: -0.3099631071090698
RESULT torch.Size([10])
logp: 0.48124319314956665
QED: 0.749464213848114
SA: 0.14645302295684814
Solution: 0.9326162338256836
normalized output: 0.865702211856842
none
tensor(0.8114, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8124e-01, 7.4946e-01, 1.4645e-01, 5.4659e-01, 6.5180e-02, 2.7036e-05,
        9.2096e-06, 1.4346e-05, 1.1001e-05, 4.0450e-01], device='cuda:0')
1469983670
compound
-20
2023-11-23 13:02:02.864998: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 13:02:03.090077: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 13:02:04.458437: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 13:02:04.458629: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 13:02:04.458652: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6210,  0.2723, -0.8545, -0.3876,  0.3324,  0.3673,  0.1223, -0.1363,
        -0.7674,  0.2732,  0.1474, -0.1938, -0.5969,  0.3932, -0.0942,  2.1013,
         0.1872, -1.1252, -0.5510, -0.5518, -1.1450,  0.5101,  0.6170, -0.9964,
         2.1475,  0.4115,  1.0495,  0.5104,  1.1201, -0.0091, -0.6947, -1.1461],
       device='cuda:0')
sum of x entries: -0.3081880807876587
RESULT torch.Size([10])
logp: 0.4811263382434845
QED: 0.7494978308677673
SA: 0.14653737843036652
Solution: 0.9326162338256836
normalized output: 0.8656734228134155
none
tensor(0.8113, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8113e-01, 7.4950e-01, 1.4654e-01, 5.4656e-01, 6.5206e-02, 2.7114e-05,
        9.2413e-06, 1.4388e-05, 1.1035e-05, 4.0449e-01], device='cuda:0')
1469983670
compound
-30
2023-11-23 13:08:46.031738: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 13:08:46.227389: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 13:08:47.616150: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 13:08:47.616374: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 13:08:47.616406: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6205,  0.2723, -0.8548, -0.3851,  0.3323,  0.3671,  0.1225, -0.1365,
        -0.7643,  0.2714,  0.1492, -0.1933, -0.5959,  0.3913, -0.0954,  2.0992,
         0.1867, -1.1246, -0.5512, -0.5513, -1.1436,  0.5106,  0.6175, -0.9955,
         2.1483,  0.4113,  1.0494,  0.5120,  1.1195, -0.0096, -0.6951, -1.1480],
       device='cuda:0')
sum of x entries: -0.3045283555984497
RESULT torch.Size([10])
logp: 0.4808901250362396
QED: 0.7495670914649963
SA: 0.1467074155807495
Solution: 0.9326162338256836
normalized output: 0.86561518907547
none
tensor(0.8113, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8089e-01, 7.4957e-01, 1.4671e-01, 5.4651e-01, 6.5259e-02, 2.7272e-05,
        9.3053e-06, 1.4474e-05, 1.1105e-05, 4.0446e-01], device='cuda:0')
1469983670
compound
-40
2023-11-23 13:15:21.688460: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 13:15:21.944610: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 13:15:23.430466: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 13:15:23.430686: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 13:15:23.430709: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6200,  0.2722, -0.8552, -0.3826,  0.3321,  0.3668,  0.1228, -0.1368,
        -0.7612,  0.2696,  0.1509, -0.1928, -0.5949,  0.3895, -0.0966,  2.0972,
         0.1861, -1.1241, -0.5514, -0.5508, -1.1422,  0.5110,  0.6179, -0.9945,
         2.1490,  0.4111,  1.0492,  0.5138,  1.1188, -0.0102, -0.6955, -1.1498],
       device='cuda:0')
sum of x entries: -0.30078125
RESULT torch.Size([10])
logp: 0.4806518852710724
QED: 0.7496359944343567
SA: 0.14687873423099518
Solution: 0.9326162338256836
normalized output: 0.8655582070350647
none
tensor(0.8112, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8065e-01, 7.4964e-01, 1.4688e-01, 5.4646e-01, 6.5311e-02, 2.7431e-05,
        9.3703e-06, 1.4560e-05, 1.1176e-05, 4.0444e-01], device='cuda:0')
1469983670
compound
-50
2023-11-23 13:22:12.654476: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 13:22:12.902556: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 13:22:14.248065: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 13:22:14.248278: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 13:22:14.248306: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6195,  0.2722, -0.8556, -0.3800,  0.3319,  0.3666,  0.1231, -0.1370,
        -0.7582,  0.2677,  0.1528, -0.1924, -0.5939,  0.3876, -0.0977,  2.0951,
         0.1856, -1.1235, -0.5516, -0.5503, -1.1408,  0.5114,  0.6184, -0.9935,
         2.1497,  0.4109,  1.0490,  0.5155,  1.1182, -0.0108, -0.6960, -1.1517],
       device='cuda:0')
sum of x entries: -0.2969609498977661
RESULT torch.Size([10])
logp: 0.48041027784347534
QED: 0.7497071027755737
SA: 0.14705191552639008
Solution: 0.9326162338256836
normalized output: 0.865500807762146
none
tensor(0.8112, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8041e-01, 7.4971e-01, 1.4705e-01, 5.4640e-01, 6.5363e-02, 2.7591e-05,
        9.4358e-06, 1.4647e-05, 1.1247e-05, 4.0440e-01], device='cuda:0')
1469983670
compound
-60
2023-11-23 13:29:00.265016: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 13:29:00.487027: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 13:29:01.797738: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 13:29:01.797930: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 13:29:01.797946: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6190,  0.2722, -0.8560, -0.3774,  0.3318,  0.3664,  0.1234, -0.1373,
        -0.7551,  0.2659,  0.1546, -0.1919, -0.5929,  0.3856, -0.0989,  2.0929,
         0.1850, -1.1229, -0.5518, -0.5498, -1.1395,  0.5118,  0.6189, -0.9925,
         2.1505,  0.4107,  1.0488,  0.5173,  1.1175, -0.0114, -0.6965, -1.1536],
       device='cuda:0')
sum of x entries: -0.29311609268188477
RESULT torch.Size([10])
logp: 0.48016801476478577
QED: 0.7497830390930176
SA: 0.14722469449043274
Solution: 0.9326162338256836
normalized output: 0.86544269323349
none
tensor(0.8111, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8017e-01, 7.4978e-01, 1.4722e-01, 5.4634e-01, 6.5415e-02, 2.7752e-05,
        9.5016e-06, 1.4734e-05, 1.1319e-05, 4.0437e-01], device='cuda:0')
1469983670
compound
-70
2023-11-23 13:35:45.090300: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 13:35:45.309559: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 13:35:46.637707: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 13:35:46.637906: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 13:35:46.637942: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6185,  0.2721, -0.8564, -0.3747,  0.3316,  0.3662,  0.1238, -0.1376,
        -0.7520,  0.2640,  0.1565, -0.1914, -0.5920,  0.3837, -0.1001,  2.0908,
         0.1845, -1.1223, -0.5519, -0.5493, -1.1381,  0.5123,  0.6193, -0.9915,
         2.1512,  0.4105,  1.0486,  0.5191,  1.1169, -0.0120, -0.6970, -1.1555],
       device='cuda:0')
sum of x entries: -0.28922152519226074
RESULT torch.Size([10])
logp: 0.47992515563964844
QED: 0.7498573660850525
SA: 0.14739790558815002
Solution: 0.9326162338256836
normalized output: 0.8653857111930847
none
tensor(0.8111, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.7993e-01, 7.4986e-01, 1.4740e-01, 5.4627e-01, 6.5467e-02, 2.7914e-05,
        9.5681e-06, 1.4822e-05, 1.1391e-05, 4.0433e-01], device='cuda:0')
1469983670
compound
-80
2023-11-23 13:42:31.280661: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 13:42:31.472158: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 13:42:32.758505: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 13:42:32.758742: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 13:42:32.758769: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6180,  0.2721, -0.8569, -0.3720,  0.3314,  0.3659,  0.1241, -0.1378,
        -0.7489,  0.2621,  0.1583, -0.1909, -0.5910,  0.3816, -0.1013,  2.0887,
         0.1839, -1.1217, -0.5521, -0.5488, -1.1368,  0.5127,  0.6198, -0.9904,
         2.1520,  0.4102,  1.0484,  0.5211,  1.1162, -0.0126, -0.6975, -1.1574],
       device='cuda:0')
sum of x entries: -0.28531479835510254
RESULT torch.Size([10])
logp: 0.4796750843524933
QED: 0.7499307990074158
SA: 0.14757534861564636
Solution: 0.9326162338256836
normalized output: 0.8653281331062317
none
tensor(0.8110, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.7968e-01, 7.4993e-01, 1.4758e-01, 5.4621e-01, 6.5518e-02, 2.8079e-05,
        9.6357e-06, 1.4911e-05, 1.1465e-05, 4.0429e-01], device='cuda:0')
1469983670
compound
-90
2023-11-23 13:49:10.901081: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 13:49:11.137340: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 13:49:12.535818: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 13:49:12.536013: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 13:49:12.536029: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6175,  0.2720, -0.8573, -0.3692,  0.3312,  0.3657,  0.1245, -0.1382,
        -0.7457,  0.2601,  0.1602, -0.1904, -0.5899,  0.3796, -0.1024,  2.0864,
         0.1833, -1.1211, -0.5523, -0.5482, -1.1355,  0.5131,  0.6203, -0.9892,
         2.1528,  0.4100,  1.0482,  0.5230,  1.1155, -0.0132, -0.6980, -1.1593],
       device='cuda:0')
sum of x entries: -0.2812002897262573
RESULT torch.Size([10])
logp: 0.4794188439846039
QED: 0.7500028610229492
SA: 0.1477503478527069
Solution: 0.9326162338256836
normalized output: 0.8652705550193787
none
tensor(0.8110, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.7942e-01, 7.5000e-01, 1.4775e-01, 5.4616e-01, 6.5569e-02, 2.8242e-05,
        9.7025e-06, 1.4999e-05, 1.1537e-05, 4.0425e-01], device='cuda:0')
1469983670
compound
-100
2023-11-23 13:55:55.698979: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 13:55:55.930405: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 13:55:57.344978: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 13:55:57.345166: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 13:55:57.345180: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6169,  0.2720, -0.8578, -0.3664,  0.3311,  0.3655,  0.1250, -0.1385,
        -0.7426,  0.2581,  0.1621, -0.1899, -0.5889,  0.3775, -0.1036,  2.0842,
         0.1828, -1.1205, -0.5525, -0.5477, -1.1342,  0.5135,  0.6208, -0.9881,
         2.1536,  0.4098,  1.0480,  0.5250,  1.1148, -0.0138, -0.6985, -1.1613],
       device='cuda:0')
sum of x entries: -0.2771812677383423
RESULT torch.Size([10])
logp: 0.4791603684425354
QED: 0.7500735521316528
SA: 0.14792585372924805
Solution: 0.9326162338256836
normalized output: 0.8652138710021973
none
tensor(0.8109, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.7916e-01, 7.5007e-01, 1.4793e-01, 5.4611e-01, 6.5620e-02, 2.8405e-05,
        9.7697e-06, 1.5087e-05, 1.1610e-05, 4.0421e-01], device='cuda:0')
1469983670
compound
-110
2023-11-23 14:02:33.932001: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 14:02:34.186949: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 14:02:35.512111: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 14:02:35.512346: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 14:02:35.512369: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6164,  0.2719, -0.8583, -0.3634,  0.3309,  0.3653,  0.1254, -0.1388,
        -0.7394,  0.2561,  0.1641, -0.1894, -0.5879,  0.3754, -0.1047,  2.0819,
         0.1821, -1.1199, -0.5527, -0.5471, -1.1329,  0.5139,  0.6213, -0.9870,
         2.1545,  0.4095,  1.0478,  0.5271,  1.1142, -0.0144, -0.6991, -1.1633],
       device='cuda:0')
sum of x entries: -0.27298831939697266
RESULT torch.Size([10])
logp: 0.4788951873779297
QED: 0.750143826007843
SA: 0.1481045037508011
Solution: 0.9326162338256836
normalized output: 0.8651705980300903
none
tensor(0.8109, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.7890e-01, 7.5014e-01, 1.4810e-01, 5.4605e-01, 6.5671e-02, 2.8572e-05,
        9.8383e-06, 1.5177e-05, 1.1684e-05, 4.0417e-01], device='cuda:0')
1469983670
compound
-120
2023-11-23 14:09:14.533848: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 14:09:14.726141: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 14:09:16.060182: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 14:09:16.060422: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 14:09:16.060449: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6158,  0.2719, -0.8588, -0.3605,  0.3308,  0.3651,  0.1259, -0.1392,
        -0.7361,  0.2541,  0.1661, -0.1889, -0.5869,  0.3733, -0.1059,  2.0797,
         0.1815, -1.1192, -0.5529, -0.5466, -1.1316,  0.5143,  0.6218, -0.9857,
         2.1553,  0.4094,  1.0476,  0.5291,  1.1135, -0.0150, -0.6996, -1.1653],
       device='cuda:0')
sum of x entries: -0.2687265872955322
RESULT torch.Size([10])
logp: 0.478630930185318
QED: 0.750214695930481
SA: 0.14828430116176605
Solution: 0.9326162338256836
normalized output: 0.8651326298713684
none
tensor(0.8109, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.7863e-01, 7.5021e-01, 1.4828e-01, 5.4600e-01, 6.5723e-02, 2.8741e-05,
        9.9081e-06, 1.5269e-05, 1.1759e-05, 4.0413e-01], device='cuda:0')
1469983670
compound
-130
2023-11-23 14:15:52.760927: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 14:15:52.981508: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 14:15:54.360782: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 14:15:54.361029: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 14:15:54.361060: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6152,  0.2719, -0.8593, -0.3576,  0.3306,  0.3650,  0.1264, -0.1396,
        -0.7329,  0.2521,  0.1681, -0.1885, -0.5859,  0.3712, -0.1071,  2.0774,
         0.1809, -1.1186, -0.5530, -0.5461, -1.1303,  0.5147,  0.6223, -0.9845,
         2.1561,  0.4091,  1.0474,  0.5312,  1.1128, -0.0156, -0.7002, -1.1673],
       device='cuda:0')
sum of x entries: -0.2645047903060913
RESULT torch.Size([10])
logp: 0.4783639907836914
QED: 0.7502856850624084
SA: 0.1484667807817459
Solution: 0.9326162338256836
normalized output: 0.865095317363739
none
tensor(0.8108, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.7836e-01, 7.5029e-01, 1.4847e-01, 5.4595e-01, 6.5775e-02, 2.8913e-05,
        9.9791e-06, 1.5362e-05, 1.1836e-05, 4.0408e-01], device='cuda:0')
1469983670
compound
-140
2023-11-23 14:22:36.049775: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 14:22:36.244486: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 14:22:37.560021: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 14:22:37.560263: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 14:22:37.560287: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6147,  0.2718, -0.8598, -0.3546,  0.3305,  0.3647,  0.1269, -0.1399,
        -0.7298,  0.2500,  0.1701, -0.1880, -0.5849,  0.3691, -0.1082,  2.0751,
         0.1803, -1.1179, -0.5532, -0.5455, -1.1290,  0.5151,  0.6228, -0.9833,
         2.1570,  0.4089,  1.0472,  0.5332,  1.1121, -0.0163, -0.7008, -1.1693],
       device='cuda:0')
sum of x entries: -0.26037585735321045
RESULT torch.Size([10])
logp: 0.47809913754463196
QED: 0.750359058380127
SA: 0.14864829182624817
Solution: 0.9326162338256836
normalized output: 0.8650606870651245
none
tensor(0.8108, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.7810e-01, 7.5036e-01, 1.4865e-01, 5.4589e-01, 6.5827e-02, 2.9085e-05,
        1.0050e-05, 1.5455e-05, 1.1912e-05, 4.0404e-01], device='cuda:0')
1469983670
compound
-150
2023-11-23 14:29:12.825766: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 14:29:13.046515: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 14:29:14.338912: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 14:29:14.339111: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 14:29:14.339127: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6141,  0.2717, -0.8604, -0.3517,  0.3303,  0.3645,  0.1274, -0.1402,
        -0.7266,  0.2480,  0.1721, -0.1875, -0.5839,  0.3670, -0.1093,  2.0728,
         0.1796, -1.1172, -0.5534, -0.5449, -1.1276,  0.5155,  0.6233, -0.9821,
         2.1578,  0.4087,  1.0470,  0.5353,  1.1114, -0.0169, -0.7013, -1.1713],
       device='cuda:0')
sum of x entries: -0.2563176155090332
RESULT torch.Size([10])
logp: 0.47783273458480835
QED: 0.7504253387451172
SA: 0.148831307888031
Solution: 0.9326162338256836
normalized output: 0.8650237321853638
none
tensor(0.8108, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.7783e-01, 7.5043e-01, 1.4883e-01, 5.4584e-01, 6.5880e-02, 2.9260e-05,
        1.0122e-05, 1.5549e-05, 1.1989e-05, 4.0400e-01], device='cuda:0')
1469983670
compound
-160
2023-11-23 14:35:53.639589: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 14:35:53.862255: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 14:35:55.255456: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 14:35:55.255673: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 14:35:55.255693: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6135,  0.2717, -0.8609, -0.3487,  0.3302,  0.3644,  0.1279, -0.1406,
        -0.7234,  0.2459,  0.1741, -0.1870, -0.5828,  0.3648, -0.1105,  2.0705,
         0.1790, -1.1166, -0.5536, -0.5444, -1.1264,  0.5159,  0.6237, -0.9808,
         2.1587,  0.4084,  1.0468,  0.5373,  1.1107, -0.0175, -0.7020, -1.1733],
       device='cuda:0')
sum of x entries: -0.2519630193710327
RESULT torch.Size([10])
logp: 0.4775610864162445
QED: 0.7505017518997192
SA: 0.14901742339134216
Solution: 0.9326162338256836
normalized output: 0.8649815917015076
none
tensor(0.8107, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.7756e-01, 7.5050e-01, 1.4902e-01, 5.4579e-01, 6.5932e-02, 2.9437e-05,
        1.0195e-05, 1.5645e-05, 1.2068e-05, 4.0396e-01], device='cuda:0')
1469983670
compound
-170
2023-11-23 14:42:38.939762: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 14:42:39.185506: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 14:42:40.523172: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 14:42:40.523440: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 14:42:40.523477: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6130,  0.2716, -0.8615, -0.3457,  0.3300,  0.3643,  0.1285, -0.1410,
        -0.7202,  0.2438,  0.1762, -0.1866, -0.5818,  0.3626, -0.1116,  2.0681,
         0.1783, -1.1159, -0.5538, -0.5438, -1.1251,  0.5163,  0.6242, -0.9796,
         2.1595,  0.4082,  1.0466,  0.5394,  1.1100, -0.0181, -0.7026, -1.1754],
       device='cuda:0')
sum of x entries: -0.24762046337127686
RESULT torch.Size([10])
logp: 0.47729071974754333
QED: 0.7505706548690796
SA: 0.14920496940612793
Solution: 0.9326162338256836
normalized output: 0.86487877368927
none
tensor(0.8106, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.7729e-01, 7.5057e-01, 1.4920e-01, 5.4574e-01, 6.5986e-02, 2.9617e-05,
        1.0270e-05, 1.5743e-05, 1.2149e-05, 4.0392e-01], device='cuda:0')
1469983670
compound
-180
2023-11-23 14:49:21.610368: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 14:49:21.845135: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 14:49:23.233531: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 14:49:23.233713: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 14:49:23.233728: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6123,  0.2715, -0.8621, -0.3425,  0.3299,  0.3641,  0.1291, -0.1414,
        -0.7170,  0.2417,  0.1782, -0.1861, -0.5807,  0.3604, -0.1128,  2.0657,
         0.1777, -1.1152, -0.5539, -0.5431, -1.1238,  0.5167,  0.6246, -0.9783,
         2.1604,  0.4079,  1.0465,  0.5416,  1.1094, -0.0187, -0.7032, -1.1774],
       device='cuda:0')
sum of x entries: -0.2430790662765503
RESULT torch.Size([10])
logp: 0.4770177900791168
QED: 0.7506381273269653
SA: 0.14939118921756744
Solution: 0.9326162338256836
normalized output: 0.8647282719612122
none
tensor(0.8105, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.7702e-01, 7.5064e-01, 1.4939e-01, 5.4570e-01, 6.6040e-02, 2.9797e-05,
        1.0344e-05, 1.5840e-05, 1.2228e-05, 4.0387e-01], device='cuda:0')
1469983670
compound
-190
2023-11-23 14:55:58.774119: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 14:55:58.989847: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 14:56:00.385497: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 14:56:00.385698: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 14:56:00.385715: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6118,  0.2714, -0.8626, -0.3394,  0.3297,  0.3639,  0.1296, -0.1418,
        -0.7137,  0.2396,  0.1803, -0.1855, -0.5797,  0.3582, -0.1139,  2.0632,
         0.1770, -1.1145, -0.5541, -0.5425, -1.1224,  0.5171,  0.6251, -0.9770,
         2.1613,  0.4077,  1.0462,  0.5438,  1.1086, -0.0194, -0.7038, -1.1794],
       device='cuda:0')
sum of x entries: -0.2387378215789795
RESULT torch.Size([10])
logp: 0.476743221282959
QED: 0.7506988644599915
SA: 0.1495787799358368
Solution: 0.9326162338256836
normalized output: 0.8645774722099304
none
tensor(0.8103, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.7674e-01, 7.5070e-01, 1.4958e-01, 5.4566e-01, 6.6093e-02, 2.9979e-05,
        1.0420e-05, 1.5938e-05, 1.2309e-05, 4.0382e-01], device='cuda:0')
1469983670
compound
-200
2023-11-23 15:02:31.444523: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 15:02:31.694408: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 15:02:33.037253: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 15:02:33.037458: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 15:02:33.037479: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6112,  0.2713, -0.8632, -0.3363,  0.3296,  0.3638,  0.1302, -0.1422,
        -0.7106,  0.2375,  0.1823, -0.1851, -0.5786,  0.3560, -0.1150,  2.0608,
         0.1763, -1.1138, -0.5543, -0.5418, -1.1212,  0.5175,  0.6256, -0.9757,
         2.1622,  0.4074,  1.0461,  0.5460,  1.1079, -0.0200, -0.7044, -1.1814],
       device='cuda:0')
sum of x entries: -0.23445701599121094
RESULT torch.Size([10])
logp: 0.4764714539051056
QED: 0.7507620453834534
SA: 0.14976578950881958
Solution: 0.9326162338256836
normalized output: 0.8644261360168457
none
tensor(0.8102, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.7647e-01, 7.5076e-01, 1.4977e-01, 5.4561e-01, 6.6146e-02, 3.0161e-05,
        1.0495e-05, 1.6037e-05, 1.2389e-05, 4.0377e-01], device='cuda:0')
1469983670
compound
-300
2023-11-23 15:09:15.379132: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 15:09:15.622095: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 15:09:16.924491: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 15:09:16.924687: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 15:09:16.924703: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.6046,  0.2699, -0.8691, -0.3029,  0.3285,  0.3620,  0.1376, -0.1468,
        -0.6779,  0.2148,  0.2031, -0.1797, -0.5676,  0.3316, -0.1257,  2.0344,
         0.1688, -1.1066, -0.5562, -0.5341, -1.1092,  0.5215,  0.6299, -0.9611,
         2.1722,  0.4037,  1.0442,  0.5715,  1.1000, -0.0273, -0.7104, -1.2022],
       device='cuda:0')
sum of x entries: -0.1878061294555664
RESULT torch.Size([10])
logp: 0.473532110452652
QED: 0.7510326504707336
SA: 0.15174761414527893
Solution: 0.9326162338256836
normalized output: 0.8628241419792175
none
tensor(0.8088, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.7353e-01, 7.5103e-01, 1.5175e-01, 5.4538e-01, 6.6712e-02, 3.2168e-05,
        1.1321e-05, 1.7122e-05, 1.3272e-05, 4.0317e-01], device='cuda:0')
1469983670
compound
-400
2023-11-23 15:16:02.555361: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 15:16:02.784444: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 15:16:04.171201: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 15:16:04.171387: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 15:16:04.171404: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.5970,  0.2674, -0.8756, -0.2620,  0.3274,  0.3597,  0.1485, -0.1538,
        -0.6427,  0.1879,  0.2255, -0.1728, -0.5550,  0.3018, -0.1356,  2.0014,
         0.1592, -1.0998, -0.5585, -0.5228, -1.0990,  0.5247,  0.6347, -0.9433,
         2.1856,  0.3974,  1.0423,  0.6082,  1.0902, -0.0365, -0.7158, -1.2251],
       device='cuda:0')
sum of x entries: -0.1334056854248047
RESULT torch.Size([10])
logp: 0.46998658776283264
QED: 0.7493882179260254
SA: 0.15378649532794952
Solution: 0.9326162338256836
normalized output: 0.8610681295394897
none
tensor(0.8072, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.6999e-01, 7.4939e-01, 1.5379e-01, 5.4573e-01, 6.7310e-02, 3.4527e-05,
        1.2257e-05, 1.8389e-05, 1.4301e-05, 4.0217e-01], device='cuda:0')
1469983670
compound
-500
2023-11-23 15:22:39.294043: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 15:22:39.486388: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 15:22:40.946113: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 15:22:40.946353: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 15:22:40.946378: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 233
Corresponding xs for GT ys max: tensor([-1.5883,  0.2633, -0.8811, -0.2191,  0.3258,  0.3567,  0.1616, -0.1614,
        -0.6068,  0.1603,  0.2516, -0.1662, -0.5403,  0.2679, -0.1444,  1.9672,
         0.1472, -1.0926, -0.5599, -0.5106, -1.0899,  0.5289,  0.6386, -0.9244,
         2.1998,  0.3899,  1.0403,  0.6477,  1.0820, -0.0477, -0.7207, -1.2484],
       device='cuda:0')
sum of x entries: -0.0729682445526123
RESULT torch.Size([10])
logp: 0.46616679430007935
QED: 0.7475652694702148
SA: 0.15600956976413727
Solution: 0.9326162338256836
normalized output: 0.8591671586036682
none
tensor(0.8055, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.6617e-01, 7.4757e-01, 1.5601e-01, 5.4615e-01, 6.7922e-02, 3.7197e-05,
        1.3321e-05, 1.9818e-05, 1.5463e-05, 4.0101e-01], device='cuda:0')
1469983670
compound
-600
2023-11-23 15:29:16.705774: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 15:29:16.921914: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 15:29:18.284104: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 15:29:18.284328: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 15:29:18.284350: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 110
Corresponding xs for GT ys max: tensor([ 9.5333e-01, -1.6149e-01,  1.8706e+00, -1.3052e+00,  1.6554e-01,
        -7.5081e-01,  5.1018e-01, -1.6031e+00,  5.9928e-01,  4.0910e-01,
        -2.1074e-01,  9.1029e-02, -1.4540e+00,  6.7770e-01, -1.6176e-01,
        -2.1644e-01, -7.8495e-01, -1.1922e+00,  1.4492e-01,  3.6787e-01,
        -1.8167e-01,  7.0475e-01,  4.4202e-01, -6.3666e-01, -5.8502e-01,
         2.1314e+00,  3.0260e-01, -3.6323e-01, -2.4028e-01, -1.9852e-02,
        -1.8584e-03, -1.2954e+00], device='cuda:0')
sum of x entries: -1.7943862676620483
RESULT torch.Size([10])
logp: 0.49504178762435913
QED: 0.8048533797264099
SA: 0.2474491149187088
Solution: 0.9326162338256836
normalized output: 0.858489453792572
none
tensor(0.8049, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.9504e-01, 8.0485e-01, 2.4745e-01, 4.6061e-01, 9.7002e-02, 2.5157e-04,
        1.1016e-04, 1.4291e-04, 1.1806e-04, 4.9381e-01], device='cuda:0')
1469983670
compound
-700
2023-11-23 15:35:58.712825: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 15:35:58.906200: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 15:36:00.274987: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 15:36:00.275181: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 15:36:00.275197: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 110
Corresponding xs for GT ys max: tensor([ 0.9598, -0.1653,  1.8652, -1.2857,  0.1879, -0.7427,  0.5191, -1.5849,
         0.6251,  0.4098, -0.2001,  0.0874, -1.4521,  0.6634, -0.1583, -0.2480,
        -0.7850, -1.1883,  0.1239,  0.3782, -0.1946,  0.6854,  0.4278, -0.6251,
        -0.5871,  2.1283,  0.2901, -0.3582, -0.2332, -0.0191, -0.0196, -1.2884],
       device='cuda:0')
sum of x entries: -1.784321904182434
RESULT torch.Size([10])
logp: 0.49338287115097046
QED: 0.8049188852310181
SA: 0.24988918006420135
Solution: 0.9326162338256836
normalized output: 0.8585619926452637
none
tensor(0.8049, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.9338e-01, 8.0492e-01, 2.4989e-01, 4.6136e-01, 9.8294e-02, 2.6989e-04,
        1.2125e-04, 1.5451e-04, 1.2953e-04, 4.9311e-01], device='cuda:0')
1469983670
compound
-800
2023-11-23 15:42:36.635384: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 15:42:36.881116: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 15:42:38.150993: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 15:42:38.151186: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 15:42:38.151202: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 110
Corresponding xs for GT ys max: tensor([ 0.9660, -0.1695,  1.8596, -1.2657,  0.2108, -0.7347,  0.5286, -1.5668,
         0.6509,  0.4089, -0.1896,  0.0838, -1.4489,  0.6482, -0.1542, -0.2791,
        -0.7845, -1.1845,  0.1042,  0.3886, -0.2083,  0.6661,  0.4145, -0.6140,
        -0.5887,  2.1258,  0.2779, -0.3511, -0.2272, -0.0199, -0.0362, -1.2823],
       device='cuda:0')
sum of x entries: -1.7713276147842407
RESULT torch.Size([10])
logp: 0.4916849732398987
QED: 0.8051295876502991
SA: 0.2521600127220154
Solution: 0.9326162338256836
normalized output: 0.8587954044342041
none
tensor(0.8051, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.9168e-01, 8.0513e-01, 2.5216e-01, 4.6222e-01, 9.9529e-02, 2.8820e-04,
        1.3294e-04, 1.6633e-04, 1.4158e-04, 4.9229e-01], device='cuda:0')
1469983670
compound
-900
2023-11-23 15:49:19.827573: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 15:49:20.032401: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 15:49:21.374450: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 15:49:21.374677: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 15:49:21.374698: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 110
Corresponding xs for GT ys max: tensor([ 0.9728, -0.1728,  1.8536, -1.2468,  0.2331, -0.7271,  0.5372, -1.5497,
         0.6769,  0.4082, -0.1801,  0.0817, -1.4455,  0.6337, -0.1511, -0.3079,
        -0.7842, -1.1802,  0.0850,  0.3983, -0.2215,  0.6468,  0.4013, -0.6025,
        -0.5898,  2.1221,  0.2650, -0.3462, -0.2202, -0.0205, -0.0545, -1.2761],
       device='cuda:0')
sum of x entries: -1.760923147201538
RESULT torch.Size([10])
logp: 0.49021005630493164
QED: 0.8048062920570374
SA: 0.25438758730888367
Solution: 0.9326162338256836
normalized output: 0.8584372997283936
none
tensor(0.8048, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.9021e-01, 8.0481e-01, 2.5439e-01, 4.6297e-01, 1.0085e-01, 3.0813e-04,
        1.4535e-04, 1.7910e-04, 1.5442e-04, 4.9168e-01], device='cuda:0')
1469983670
compound
-1000
2023-11-23 15:55:57.878652: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 15:55:58.136720: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 15:55:59.422253: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 15:55:59.422429: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 15:55:59.422447: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 110
Corresponding xs for GT ys max: tensor([ 0.9795, -0.1761,  1.8480, -1.2278,  0.2537, -0.7201,  0.5448, -1.5343,
         0.7023,  0.4075, -0.1723,  0.0800, -1.4416,  0.6201, -0.1458, -0.3340,
        -0.7840, -1.1765,  0.0668,  0.4071, -0.2344,  0.6281,  0.3884, -0.5913,
        -0.5913,  2.1182,  0.2526, -0.3428, -0.2143, -0.0201, -0.0720, -1.2706],
       device='cuda:0')
sum of x entries: -1.7523689270019531
RESULT torch.Size([10])
logp: 0.48884132504463196
QED: 0.8044914603233337
SA: 0.25651270151138306
Solution: 0.9326162338256836
normalized output: 0.8580886125564575
none
tensor(0.8045, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.8884e-01, 8.0449e-01, 2.5651e-01, 4.6366e-01, 1.0212e-01, 3.2836e-04,
        1.5819e-04, 1.9216e-04, 1.6768e-04, 4.9109e-01], device='cuda:0')
1469983670
compound
-2000
2023-11-23 16:02:45.067428: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 16:02:45.280544: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 16:02:46.652120: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 16:02:46.652324: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 16:02:46.652342: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 110
Corresponding xs for GT ys max: tensor([ 1.0725, -0.1836,  1.8380, -1.0589,  0.4203, -0.6148,  0.5927, -1.3878,
         0.9954,  0.3575, -0.0441,  0.1096, -1.3287,  0.4948, -0.0985, -0.6555,
        -0.8047, -1.0896, -0.1319,  0.5441, -0.3974,  0.3644,  0.3409, -0.4392,
        -0.5981,  2.0936,  0.1385, -0.1654, -0.1665,  0.0030, -0.2795, -1.2142],
       device='cuda:0')
sum of x entries: -1.2930964231491089
RESULT torch.Size([10])
logp: 0.46336838603019714
QED: 0.805730938911438
SA: 0.267276406288147
Solution: 0.9326162338256836
normalized output: 0.8594614267349243
none
tensor(0.8057, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.6337e-01, 8.0573e-01, 2.6728e-01, 4.7859e-01, 1.0978e-01, 4.8506e-04,
        3.0259e-04, 3.0313e-04, 3.1899e-04, 4.7548e-01], device='cuda:0')
1469983670
compound
-3000
2023-11-23 16:09:22.668195: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 16:09:22.922225: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 16:09:24.264507: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 16:09:24.264697: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 16:09:24.264713: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 52
Corresponding xs for GT ys max: tensor([ 1.0673, -1.8486,  0.2542, -0.7579,  1.3315,  0.9438, -0.1571, -0.2595,
         0.1987,  0.1186, -1.0246,  0.3969, -0.8788, -1.4210,  0.3433,  1.6891,
        -0.4080,  0.8493,  0.5043,  0.0216, -1.1768, -0.4137,  0.1256, -0.9598,
        -0.2219, -0.1744,  0.2757,  0.1285,  0.9327, -2.2457, -0.7172,  0.1759],
       device='cuda:0')
sum of x entries: -3.308108329772949
RESULT torch.Size([10])
logp: 0.5088723301887512
QED: 0.7096796035766602
SA: 0.20995084941387177
Solution: 0.9326162338256836
normalized output: 0.8216437101364136
none
tensor(0.7716, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([5.0887e-01, 7.0968e-01, 2.0995e-01, 4.6321e-01, 9.6129e-02, 1.6338e-04,
        5.2078e-05, 8.5508e-05, 7.1775e-05, 4.5028e-01], device='cuda:0')
1469983670
compound
-4000
2023-11-23 16:16:01.330187: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 16:16:01.587033: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 16:16:02.896342: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 16:16:02.896550: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 16:16:02.896568: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 52
Corresponding xs for GT ys max: tensor([ 1.0323, -1.6486,  0.2212, -0.3463,  1.2768,  0.9775,  0.2452, -0.0044,
         0.6794,  0.1197, -0.9585, -0.2444, -0.6836, -2.1060,  0.2456,  1.6317,
        -0.3138,  0.8060,  0.5721,  0.1734, -1.6156, -0.3781,  0.4435, -0.9224,
        -0.0714,  0.1658,  0.3137,  0.8897,  1.0083, -2.0300, -0.4964, -0.0901],
       device='cuda:0')
sum of x entries: -1.1077533960342407
RESULT torch.Size([10])
logp: 0.434589684009552
QED: 0.6971558928489685
SA: 0.22300562262535095
Solution: 0.9326162338256836
normalized output: 0.8483280539512634
none
tensor(0.7957, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([4.3459e-01, 6.9716e-01, 2.2301e-01, 5.6951e-01, 7.8093e-02, 1.2003e-04,
        4.0523e-05, 6.1714e-05, 4.7115e-05, 3.8198e-01], device='cuda:0')
1469983670
compound
-5000
2023-11-23 16:22:42.830455: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 16:22:43.081717: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 16:22:44.469934: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 16:22:44.470126: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 16:22:44.470142: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 225
Corresponding xs for GT ys max: tensor([-1.0135e+00,  1.2419e+00, -1.2152e+00, -2.2816e-01,  1.1883e+00,
         4.5731e-01,  2.4067e-01, -8.5563e-01, -1.0137e+00,  8.6922e-01,
        -3.7413e-01,  5.2222e-01,  1.1480e+00, -1.5136e+00,  1.4015e+00,
        -9.9493e-01, -1.3934e-03,  1.0681e+00, -7.3140e-01, -8.5492e-01,
         3.7184e-01, -8.0588e-01, -2.7927e-01, -2.9287e-01, -6.0848e-03,
         1.7468e-01, -6.9383e-01,  5.2314e-01, -1.1232e+00, -5.0768e-01,
        -4.3851e-01, -2.9575e-01], device='cuda:0')
sum of x entries: -4.032855033874512
RESULT torch.Size([10])
logp: 0.4283246397972107
QED: 0.7236427068710327
SA: 0.3026157021522522
Solution: 0.9326162338256836
normalized output: 0.8621186017990112
none
tensor(0.8081, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([0.4283, 0.7236, 0.3026, 0.5047, 0.1418, 0.0018, 0.0011, 0.0011, 0.0012,
        0.4404], device='cuda:0')
1469983670
compound
-6000
2023-11-23 16:29:28.937305: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 16:29:29.184748: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 16:29:30.467544: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 16:29:30.467795: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 16:29:30.467821: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 246
Corresponding xs for GT ys max: tensor([-1.1203, -0.5640, -1.8850,  1.5519,  1.2983,  0.6949,  0.8899, -1.0287,
         0.2614,  0.2909,  0.8917,  1.5669,  0.4058, -0.0343, -1.6716, -1.4870,
        -1.0039, -0.0627, -0.4303, -0.0190,  0.8416,  0.4964,  0.5497,  1.5973,
        -0.7011,  1.0226,  0.7099,  0.6251, -0.1372,  0.6142,  0.9402, -0.7411],
       device='cuda:0')
sum of x entries: 4.362377166748047
RESULT torch.Size([10])
logp: 0.3562571108341217
QED: 0.6822081208229065
SA: 0.21992719173431396
Solution: 0.9326162338256836
normalized output: 0.8730120658874512
none
tensor(0.8180, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([3.5626e-01, 6.8221e-01, 2.1993e-01, 5.1906e-01, 1.1872e-01, 3.0512e-04,
        9.7649e-05, 1.5523e-04, 1.1786e-04, 5.3910e-01], device='cuda:0')
1469983670
compound
-7000
2023-11-23 16:36:19.250668: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 16:36:19.466912: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 16:36:20.789839: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 16:36:20.790052: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 16:36:20.790074: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 246
Corresponding xs for GT ys max: tensor([-1.1239, -0.5061, -1.8567,  1.6586,  1.2616,  0.7556,  1.0157, -1.1352,
         0.2666,  0.2234,  0.9340,  1.5368,  0.3767, -0.1977, -1.6463, -1.5954,
        -1.0271, -0.1150, -0.5145, -0.0644,  0.9029,  0.4111,  0.6166,  1.5524,
        -0.6423,  0.8695,  0.6303,  0.8649, -0.1403,  0.6129,  0.9397, -0.8230],
       device='cuda:0')
sum of x entries: 4.041421890258789
RESULT torch.Size([10])
logp: 0.34268805384635925
QED: 0.6912956833839417
SA: 0.2087903469800949
Solution: 0.9326162338256836
normalized output: 0.8783718943595886
none
tensor(0.8228, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([3.4269e-01, 6.9130e-01, 2.0879e-01, 5.3298e-01, 1.1343e-01, 2.2284e-04,
        7.6538e-05, 1.1506e-04, 9.3998e-05, 5.3049e-01], device='cuda:0')
1469983670
compound
-8000
2023-11-23 16:43:03.401144: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 16:43:03.606524: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 16:43:04.897338: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 16:43:04.897521: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 16:43:04.897536: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 42
Corresponding xs for GT ys max: tensor([ 0.0606,  1.0042,  1.2457,  1.8419,  0.1439, -0.0088,  1.2496, -0.8970,
        -0.0491,  0.0901,  1.4524,  0.4831,  0.3404, -1.5298,  0.0143, -0.0236,
         0.5106,  0.2949, -2.6595,  0.5122,  0.5557, -0.7306,  0.2504, -0.5034,
        -1.5880, -0.0817,  0.3708,  1.8594,  1.0597,  1.2594,  1.1118, -0.8803],
       device='cuda:0')
sum of x entries: 6.7591142654418945
RESULT torch.Size([10])
logp: 0.3192305564880371
QED: 0.6495968103408813
SA: 0.1930132657289505
Solution: 0.9326162338256836
normalized output: 0.881493330001831
none
tensor(0.8256, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([3.1923e-01, 6.4960e-01, 1.9301e-01, 5.7609e-01, 8.4210e-02, 9.4721e-05,
        3.3584e-05, 4.7605e-05, 3.8713e-05, 4.1028e-01], device='cuda:0')
1469983670
compound
-9000
2023-11-23 16:49:41.809665: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 16:49:42.052191: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 16:49:43.413915: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 16:49:43.414113: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 16:49:43.414130: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 42
Corresponding xs for GT ys max: tensor([ 0.1172,  1.0943,  1.2469,  1.8530,  0.1539, -0.0725,  1.2860, -0.9054,
        -0.0210,  0.0226,  1.4943,  0.4083,  0.2058, -1.6439,  0.0152, -0.1388,
         0.5126,  0.2676, -2.8363,  0.4382,  0.5619, -0.7628,  0.2158, -0.4340,
        -1.6584, -0.0893,  0.2650,  1.9221,  1.0328,  1.3614,  1.2534, -0.9158],
       device='cuda:0')
sum of x entries: 6.249964237213135
RESULT torch.Size([10])
logp: 0.31132450699806213
QED: 0.6436372995376587
SA: 0.1948593705892563
Solution: 0.9326162338256836
normalized output: 0.8854854702949524
none
tensor(0.8292, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([3.1132e-01, 6.4364e-01, 1.9486e-01, 5.8054e-01, 7.9723e-02, 8.3084e-05,
        2.8288e-05, 4.0704e-05, 3.2500e-05, 4.0011e-01], device='cuda:0')
1469983670
compound
-10000
2023-11-23 16:56:26.802259: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 16:56:27.050361: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 16:56:28.311007: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 16:56:28.311221: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 16:56:28.311237: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 1
Corresponding xs for GT ys max: tensor([ 0.6070, -0.0359, -0.5462,  0.2325,  0.1940,  0.3211, -0.5650, -0.9277,
         2.0435, -0.1314,  0.4838, -0.7655, -0.5749, -1.0318, -1.3665, -1.5201,
         0.8117,  1.0683, -0.6890,  0.7464,  2.3917, -1.5282, -1.5744,  0.0161,
        -0.7118,  0.8899,  0.0118,  1.9379, -0.5177,  1.4638,  0.8345, -0.1692],
       device='cuda:0')
sum of x entries: 1.3982453346252441
RESULT torch.Size([10])
logp: 0.375293493270874
QED: 0.6083553433418274
SA: 0.28010281920433044
Solution: 0.9326162338256836
normalized output: 0.8885748982429504
none
tensor(0.8320, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([3.7529e-01, 6.0836e-01, 2.8010e-01, 5.5550e-01, 1.6100e-01, 1.2571e-03,
        4.7627e-04, 7.3255e-04, 5.6546e-04, 5.0409e-01], device='cuda:0')
1469983670
compound
-20000
2023-11-23 17:03:11.302415: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 17:03:11.495733: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 17:03:12.851851: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 17:03:12.852063: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 17:03:12.852081: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 126
Corresponding xs for GT ys max: tensor([ 1.0373,  0.8947, -1.0447,  1.6659, -0.3667,  0.3310,  0.0990, -0.4312,
         2.3549,  0.5068,  0.4016, -0.1747, -1.5421, -2.4779, -0.5710, -0.4317,
         1.2095, -0.4519, -1.9946,  1.0697,  0.6637, -2.2891, -1.4452,  0.5144,
        -1.2003,  1.6554,  0.0793,  1.0093,  1.6458, -1.0178,  1.8466, -1.4731],
       device='cuda:0')
sum of x entries: 0.0727236270904541
RESULT torch.Size([10])
logp: 0.3409392833709717
QED: 0.6348578333854675
SA: 0.24840402603149414
Solution: 0.9326162338256836
normalized output: 0.9039209485054016
none
tensor(0.8459, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([3.4094e-01, 6.3486e-01, 2.4840e-01, 5.3702e-01, 1.0434e-01, 2.1515e-04,
        5.3730e-05, 9.9823e-05, 7.1785e-05, 5.0769e-01], device='cuda:0')
1469983670
compound
-30000
2023-11-23 17:09:49.014985: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 17:09:49.233662: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 17:09:50.514405: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 17:09:50.514646: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 17:09:50.514685: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 126
Corresponding xs for GT ys max: tensor([ 1.1790,  0.8103, -1.4221,  1.6516, -0.2487,  0.5962,  0.3988, -0.5773,
         2.6186,  0.4391,  0.6493, -0.6578, -1.7818, -2.4545, -0.6102, -0.4217,
         1.3630, -0.4721, -2.6989,  1.6449,  0.9309, -2.7317, -1.9454,  0.5107,
        -1.1562,  1.4861,  0.3531,  1.0620,  1.5906, -0.8372,  2.4349, -1.5206],
       device='cuda:0')
sum of x entries: 0.18291592597961426
RESULT torch.Size([10])
logp: 0.3256787061691284
QED: 0.6420063972473145
SA: 0.23989692330360413
Solution: 0.9326162338256836
normalized output: 0.9135648012161255
none
tensor(0.8546, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([3.2568e-01, 6.4201e-01, 2.3990e-01, 5.5196e-01, 8.9123e-02, 1.1048e-04,
        2.3335e-05, 4.7541e-05, 3.2465e-05, 5.2157e-01], device='cuda:0')
1469983670
compound
-40000
2023-11-23 17:16:33.317703: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 17:16:33.550370: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 17:16:35.055433: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 17:16:35.055642: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 17:16:35.055663: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 126
Corresponding xs for GT ys max: tensor([ 1.3603,  0.7578, -1.7969,  2.1645, -0.7213,  1.4166,  1.4493,  0.2123,
         2.0118, -0.0292,  1.5669, -0.2568, -1.1534, -2.6773, -1.1454, -1.0506,
         2.4080, -0.5280, -2.4772,  1.7836,  1.4700, -2.8875, -1.7140, -0.2481,
        -1.7901,  2.0548,  0.3387,  0.3971,  2.9171, -0.7768,  2.6323, -2.1890],
       device='cuda:0')
sum of x entries: 3.4996423721313477
RESULT torch.Size([10])
logp: 0.3208770751953125
QED: 0.6350231170654297
SA: 0.2482496201992035
Solution: 0.9326162338256836
normalized output: 0.9215510487556458
none
tensor(0.8618, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([3.2088e-01, 6.3502e-01, 2.4825e-01, 4.9189e-01, 6.4713e-02, 4.5869e-05,
        4.4866e-06, 1.4024e-05, 6.1920e-06, 5.6230e-01], device='cuda:0')
1469983670
compound
-50000
2023-11-23 17:23:17.359616: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 17:23:17.592554: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 17:23:18.977803: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 17:23:18.978010: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 17:23:18.978025: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 126
Corresponding xs for GT ys max: tensor([ 1.4074,  0.7327, -1.7888,  2.3608, -0.9749,  1.4683,  1.6439,  0.3181,
         2.1821,  0.0314,  1.7410, -0.3929, -1.2135, -2.7138, -1.3186, -1.1495,
         2.6830, -0.5308, -2.7557,  2.0259,  1.7434, -3.0071, -1.9586, -0.2539,
        -1.9812,  2.1614,  0.4861,  0.3727,  3.1732, -0.7955,  2.8837, -2.3379],
       device='cuda:0')
sum of x entries: 4.2422380447387695
RESULT torch.Size([10])
logp: 0.3145539462566376
QED: 0.6099530458450317
SA: 0.24215416610240936
Solution: 0.9326162338256836
normalized output: 0.9285334348678589
none
tensor(0.8681, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([3.1455e-01, 6.0995e-01, 2.4215e-01, 4.8687e-01, 5.7408e-02, 2.7797e-05,
        1.9205e-06, 7.4786e-06, 2.7540e-06, 5.7686e-01], device='cuda:0')
1469983670
compound
-60000
2023-11-23 17:29:58.905612: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 17:29:59.132852: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 17:30:00.414108: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 17:30:00.414308: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 17:30:00.414328: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 229
Corresponding xs for GT ys max: tensor([ 1.1437,  0.3148, -2.1564,  6.6459,  1.8396, -1.6654,  1.0492, -0.4005,
         0.9707, -3.5152,  1.0945,  1.6238, -1.5305, -1.6741,  1.7443, -1.1146,
        -2.2961,  1.1651,  0.8453,  2.6445, -1.6253, -0.3496,  0.8886,  1.8593,
        -1.7377,  0.2620,  2.8899, -0.6168, -0.4957,  1.1051,  0.0070, -1.1467],
       device='cuda:0')
sum of x entries: 7.768540859222412
RESULT torch.Size([10])
logp: 0.26149678230285645
QED: 0.713803768157959
SA: 0.24147172272205353
Solution: 0.9326162338256836
normalized output: 0.9352095127105713
none
tensor(0.8741, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([2.6150e-01, 7.1380e-01, 2.4147e-01, 6.0376e-01, 4.9187e-02, 9.5736e-06,
        6.7606e-07, 2.6346e-06, 9.1453e-07, 6.6650e-01], device='cuda:0')
1469983670
compound
-70000
2023-11-23 17:36:41.245658: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 17:36:41.464462: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 17:36:42.837440: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 17:36:42.837657: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 17:36:42.837675: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 229
Corresponding xs for GT ys max: tensor([ 1.0541,  0.3294, -2.0765,  6.7656,  1.5743, -1.6699,  1.2310, -0.2438,
         0.9764, -3.7363,  1.1510,  1.2998, -1.4290, -1.9300,  2.6606, -1.1193,
        -2.4928,  1.4365,  0.6480,  2.7798, -1.5919,  0.1302,  1.0518,  1.8071,
        -1.5775,  0.3371,  3.1571, -0.5261, -0.9071,  0.8541,  0.1343, -1.6369],
       device='cuda:0')
sum of x entries: 8.441027641296387
RESULT torch.Size([10])
logp: 0.25234565138816833
QED: 0.7332436442375183
SA: 0.23982395231723785
Solution: 0.9326162338256836
normalized output: 0.9395607709884644
none
tensor(0.8780, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([2.5235e-01, 7.3324e-01, 2.3982e-01, 6.5087e-01, 4.6736e-02, 7.3182e-06,
        6.6795e-07, 2.2357e-06, 9.4292e-07, 6.6305e-01], device='cuda:0')
1469983670
compound
-80000
2023-11-23 17:43:28.476779: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 17:43:28.740116: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 17:43:30.066139: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 17:43:30.066333: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 17:43:30.066351: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 229
Corresponding xs for GT ys max: tensor([ 1.5248, -0.2021, -2.3798,  7.0475,  1.4635, -2.0951,  0.8052, -0.4967,
         1.0515, -4.1201,  1.3327,  1.9280, -1.0980, -1.9930,  2.4394, -0.9025,
        -2.3647,  1.4623,  0.6740,  2.2945, -1.1712,  0.0742,  1.1527,  2.1466,
        -2.0618,  0.2693,  3.0443, -0.6745, -0.7825,  1.5498,  0.4834, -2.3676],
       device='cuda:0')
sum of x entries: 8.033872604370117
RESULT torch.Size([10])
logp: 0.2500361502170563
QED: 0.714402973651886
SA: 0.2191011905670166
Solution: 0.9326162338256836
normalized output: 0.9452542066574097
none
tensor(0.8832, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([2.5004e-01, 7.1440e-01, 2.1910e-01, 6.4193e-01, 4.4031e-02, 4.4916e-06,
        2.9251e-07, 1.2317e-06, 4.1739e-07, 6.7322e-01], device='cuda:0')
1469983670
compound
-90000
2023-11-23 17:50:15.723729: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 17:50:15.980324: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 17:50:17.279744: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 17:50:17.279960: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 17:50:17.279978: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 229
Corresponding xs for GT ys max: tensor([ 1.5547, -0.2011, -2.5274,  7.1889,  1.5588, -2.1565,  0.8300, -0.5581,
         1.1274, -4.2593,  1.3239,  1.9876, -1.1689, -2.0817,  2.5342, -0.9076,
        -2.4138,  1.5318,  0.7501,  2.3212, -1.2657,  0.1089,  1.1647,  2.1146,
        -2.1584,  0.3314,  3.1883, -0.7435, -0.7858,  1.4874,  0.5903, -2.4553],
       device='cuda:0')
sum of x entries: 8.011104583740234
RESULT torch.Size([10])
logp: 0.24441872537136078
QED: 0.7314638495445251
SA: 0.2146703451871872
Solution: 0.9326162338256836
normalized output: 0.9503376483917236
none
tensor(0.8878, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([2.4442e-01, 7.3146e-01, 2.1467e-01, 6.4691e-01, 3.9483e-02, 3.0577e-06,
        1.9517e-07, 8.1941e-07, 2.7989e-07, 6.7518e-01], device='cuda:0')
1469983670
compound
-100000
2023-11-23 17:56:58.500465: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 17:56:58.722373: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 17:57:00.018287: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 17:57:00.018538: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 17:57:00.018587: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 229
Corresponding xs for GT ys max: tensor([ 1.5165, -0.0180, -2.4659,  6.9818,  1.5944, -2.2288,  1.3874, -0.5473,
         1.0561, -4.6440,  1.5607,  2.0475, -1.3202, -2.2990,  2.6427, -0.8815,
        -2.6164,  1.7516,  0.8037,  2.4149, -1.2091,  0.5323,  1.6129,  2.1176,
        -2.2287,  0.5724,  3.0919, -0.7028, -0.9935,  1.1482,  0.5930, -2.5948],
       device='cuda:0')
sum of x entries: 8.675475120544434
RESULT torch.Size([10])
logp: 0.23144026100635529
QED: 0.7646650671958923
SA: 0.20091411471366882
Solution: 0.9326162338256836
normalized output: 0.9545555114746094
none
tensor(0.8916, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([2.3144e-01, 7.6467e-01, 2.0091e-01, 6.4743e-01, 3.2852e-02, 1.5738e-06,
        1.1073e-07, 4.1680e-07, 1.6111e-07, 6.6007e-01], device='cuda:0')
1469983670
compound
-200000
2023-11-23 18:03:43.850783: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 18:03:44.077022: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 18:03:45.396989: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 18:03:45.397164: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 18:03:45.397183: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 3
Corresponding xs for GT ys max: tensor([-0.8033, -0.9473, -0.4703,  3.3633, -0.6544,  0.2147,  0.9005,  0.2557,
         4.0613, -2.8733,  4.1426, -1.9230, -1.8802, -1.8786,  2.5265, -2.5754,
         3.4880, -0.3586, -2.1055,  2.5915,  2.9688, -3.0940, -4.1403,  0.6839,
        -0.6708,  2.3809,  1.0378,  0.9332,  6.0928,  0.4845,  1.7614, -0.4737],
       device='cuda:0')
sum of x entries: 13.038649559020996
RESULT torch.Size([10])
logp: 0.2516883611679077
QED: 0.6904231905937195
SA: 0.27458468079566956
Solution: 0.9326162338256836
normalized output: 0.9895728230476379
none
tensor(0.9232, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([2.5169e-01, 6.9042e-01, 2.7458e-01, 6.5750e-01, 4.8077e-02, 1.3411e-05,
        1.8541e-06, 4.5713e-06, 2.4537e-06, 5.5757e-01], device='cuda:0')
1469983670
compound
-300000
2023-11-23 18:10:21.989409: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 18:10:22.214935: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 18:10:23.755462: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 18:10:23.755746: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 18:10:23.755783: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 3
Corresponding xs for GT ys max: tensor([-0.8409, -1.4636, -2.1467,  2.8765,  0.0168,  0.8933,  1.7422, -0.3011,
         4.3562, -3.1655,  2.9362, -3.3610, -2.3203, -4.0663,  1.7892, -4.6253,
         4.2418, -1.0412, -2.7134,  2.9370,  3.7019, -3.6858, -4.5293,  0.7766,
         0.1774,  2.6833,  1.9031,  0.8478,  5.5318,  1.2069,  1.6381, -0.9119],
       device='cuda:0')
sum of x entries: 5.084007740020752
RESULT torch.Size([10])
logp: 0.23339945077896118
QED: 0.6800851821899414
SA: 0.27571994066238403
Solution: 0.9326162338256836
normalized output: 1.0080853700637817
none
tensor(0.9399, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([2.3340e-01, 6.8009e-01, 2.7572e-01, 6.5472e-01, 3.1204e-02, 3.0439e-06,
        2.5716e-07, 8.1713e-07, 3.7568e-07, 5.5008e-01], device='cuda:0')
1469983670
compound
-400000
2023-11-23 18:16:58.266162: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 18:16:58.452557: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 18:16:59.826249: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 18:16:59.826457: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 18:16:59.826476: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 230
Corresponding xs for GT ys max: tensor([ 0.9928, -2.8193, -4.0162,  6.8948,  2.7643, -3.4233,  0.9639,  2.8883,
         4.9727, -5.4059,  0.9002,  2.3695, -2.9218, -3.1323,  3.6429, -0.5803,
        -3.9926,  3.2350, -1.8610,  4.0799, -1.2170, -0.9822,  2.1826,  2.0955,
        -3.0413,  0.7759,  2.5321, -1.3908,  1.6659,  1.3495,  2.8080, -2.2419],
       device='cuda:0')
sum of x entries: 10.087739944458008
RESULT torch.Size([10])
logp: 0.19079260528087616
QED: 0.8010759949684143
SA: 0.20237301290035248
Solution: 0.9326162338256836
normalized output: 1.0044442415237427
none
tensor(0.9366, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([1.9079e-01, 8.0108e-01, 2.0237e-01, 5.7519e-01, 1.1970e-02, 8.7963e-08,
        2.7961e-09, 1.4046e-08, 4.9015e-09, 6.1622e-01], device='cuda:0')
1469983670
compound
-500000
2023-11-23 18:23:30.309062: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 18:23:30.501275: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 18:23:31.874738: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 18:23:31.874926: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 18:23:31.874946: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 74
Corresponding xs for GT ys max: tensor([  8.2031,  -2.9527,  -3.6718,  -1.6366,   0.7463,  10.6883,   4.9609,
         -4.8662,   6.2139,  -2.5723,  -9.1596,  -5.3870,  -4.8132, -12.6173,
         -2.9403,  -9.9788,   0.3170,  10.0217,   4.9078,   0.4704,   5.6920,
         -2.9719,   5.8432,   0.7238,   4.7326,   2.8180,   2.3334,  -1.4866,
         -1.0824,  -3.5944,   3.9498,   1.7178], device='cuda:0')
sum of x entries: 4.6086883544921875
RESULT torch.Size([10])
logp: 0.18737977743148804
QED: 0.8527340292930603
SA: 0.11015015840530396
Solution: 0.9326162338256836
normalized output: 1.024033784866333
none
tensor(0.9543, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([1.8738e-01, 8.5273e-01, 1.1015e-01, 6.1737e-01, 7.9035e-04, 2.1291e-12,
        5.2153e-15, 1.2248e-13, 1.7527e-14, 5.4576e-01], device='cuda:0')
1469983670
compound
-600000
2023-11-23 18:30:07.253057: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 18:30:07.512050: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 18:30:08.886208: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 18:30:08.886411: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 18:30:08.886427: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 243
Corresponding xs for GT ys max: tensor([-0.5321, -2.4305, -5.2193,  5.9792, -0.2718, -2.0556,  2.2479, -0.0159,
         3.6520, -4.2980, -1.2176, -3.0278, -6.9256, -7.5470,  5.1046, -8.6547,
        -2.5487,  1.4232, -3.4395,  1.8158, -0.0715,  0.0472,  0.0397,  1.2034,
         0.5465, -0.9490,  6.1643, -1.8987, -1.9583,  4.0031,  3.3528, -2.4181],
       device='cuda:0')
sum of x entries: -19.90001678466797
RESULT torch.Size([10])
logp: 0.14405043423175812
QED: 0.9103426337242126
SA: 0.18625423312187195
Solution: 0.9326162338256836
normalized output: 1.010640263557434
none
tensor(0.9422, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([1.4405e-01, 9.1034e-01, 1.8625e-01, 7.0526e-01, 2.8554e-03, 2.1028e-09,
        1.9431e-10, 3.4369e-10, 2.6776e-10, 3.6595e-01], device='cuda:0')
1469983670
compound
-700000
2023-11-23 18:36:51.696578: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 18:36:51.918382: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 18:36:53.170483: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 18:36:53.170707: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 18:36:53.170729: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 123
Corresponding xs for GT ys max: tensor([-0.7587, -2.7254, -5.4548,  5.8217, -0.4192, -2.1830,  2.3212, -0.1971,
         3.6927, -4.2935, -1.2364, -2.9368, -7.1944, -7.9200,  5.2196, -9.1201,
        -2.3006,  1.5518, -3.7756,  2.1945,  0.2811,  0.2184, -0.4449,  1.2507,
         0.7929, -1.2617,  6.6390, -1.9295, -2.0568,  4.2312,  3.8296, -2.7202],
       device='cuda:0')
sum of x entries: -20.884431838989258
RESULT torch.Size([10])
logp: 0.14198896288871765
QED: 0.9218748807907104
SA: 0.1822265088558197
Solution: 0.9326162338256836
normalized output: 1.025816798210144
none
tensor(0.9559, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([1.4199e-01, 9.2187e-01, 1.8223e-01, 6.9810e-01, 2.3474e-03, 1.0553e-09,
        9.2092e-11, 1.6478e-10, 1.2986e-10, 3.7575e-01], device='cuda:0')
1469983670
compound
-800000
2023-11-23 18:43:33.433996: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 18:43:33.654886: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 18:43:35.028256: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 18:43:35.028540: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 18:43:35.028576: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 51
Corresponding xs for GT ys max: tensor([ 0.6654, -2.2562, -4.1180,  6.6386,  0.5188, -4.0433,  1.3163, -0.3862,
         4.6318, -4.9504, -1.5274, -3.4369, -5.8947, -5.5630,  4.8809, -7.5145,
        -1.9890,  2.7242, -5.2087,  3.5819,  0.2043, -1.1779,  0.5439,  3.0221,
         0.0704, -0.5237,  9.2268, -2.2168, -1.6467,  4.6687,  4.5439, -3.9902],
       device='cuda:0')
sum of x entries: -9.205477714538574
RESULT torch.Size([10])
logp: 0.13919933140277863
QED: 0.9295936822891235
SA: 0.1505238562822342
Solution: 0.9326162338256836
normalized output: 1.0426071882247925
none
tensor(0.9711, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([1.3920e-01, 9.2959e-01, 1.5052e-01, 7.4862e-01, 2.2249e-03, 4.0974e-10,
        3.5766e-11, 7.0996e-11, 5.3374e-11, 4.5405e-01], device='cuda:0')
1469983670
compound
-900000
2023-11-23 18:50:16.525645: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 18:50:16.713124: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 18:50:17.949198: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 18:50:17.949387: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 18:50:17.949406: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 47
Corresponding xs for GT ys max: tensor([ 4.4862,  2.0246,  3.0372,  5.1024,  2.0759, -4.0306,  3.6493, -1.6434,
         2.1469, -1.5041,  2.6514,  3.6686, -0.7514, -1.5436,  3.8423, -6.1656,
        -2.1218,  0.9821, -2.3073,  3.8181,  0.7408,  2.8586,  2.8258,  5.5361,
        -4.7897,  7.6191, -2.1405, -2.4495,  3.4020,  0.7505,  0.1315, -3.0961],
       device='cuda:0')
sum of x entries: 28.806011199951172
RESULT torch.Size([10])
logp: 0.1957765519618988
QED: 0.9395115971565247
SA: 0.16386370360851288
Solution: 0.9326162338256836
normalized output: 1.040454626083374
none
tensor(0.9691, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([1.9578e-01, 9.3951e-01, 1.6386e-01, 5.5970e-01, 7.5807e-03, 2.0049e-08,
        1.3534e-09, 3.8112e-09, 1.5749e-09, 6.6356e-01], device='cuda:0')
1469983670
compound
-1000000
2023-11-23 18:56:53.530004: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 18:56:53.751176: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 18:56:55.051637: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 18:56:55.051813: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 18:56:55.051831: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 47
Corresponding xs for GT ys max: tensor([ 4.0282,  2.5496,  1.6039,  5.1573,  2.7849, -5.1182,  4.1146, -1.2597,
         3.2005, -1.7922,  2.1316,  3.2112, -1.2280, -3.1664,  3.3376, -7.2043,
         0.5477,  1.5664, -0.7460,  2.5155,  0.8018,  0.5921,  3.9095,  3.9211,
        -6.7375,  9.3012, -1.5374, -3.0723,  3.2370,  0.4033,  0.8592, -4.5203],
       device='cuda:0')
sum of x entries: 23.392192840576172
RESULT torch.Size([10])
logp: 0.15949469804763794
QED: 0.9650728106498718
SA: 0.14277316629886627
Solution: 0.9326162338256836
normalized output: 1.0400235652923584
none
tensor(0.9688, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([1.5949e-01, 9.6507e-01, 1.4277e-01, 5.9569e-01, 3.0679e-03, 9.1862e-10,
        5.0014e-11, 1.4024e-10, 6.2657e-11, 6.5753e-01], device='cuda:0')
1469983670
compound
-1200000
2023-11-23 19:03:31.947924: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 19:03:32.175008: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 19:03:33.481140: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 19:03:33.481340: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 19:03:33.481357: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 47
Corresponding xs for GT ys max: tensor([ 4.4515,  2.0874,  1.5268,  5.9911,  3.6333, -6.0594,  4.5045, -0.4329,
         3.9719, -1.9580,  0.9344,  3.1371, -1.5252, -3.1537,  2.0705, -7.2496,
         1.1365,  0.0363, -1.1694,  3.4799,  0.7475,  1.3853,  3.3498,  4.4287,
        -7.7688,  9.8117, -1.7386, -3.3665,  3.1222, -0.2052,  0.8719, -4.5014],
       device='cuda:0')
sum of x entries: 21.549808502197266
RESULT torch.Size([10])
logp: 0.16159267723560333
QED: 0.9535855054855347
SA: 0.14844156801700592
Solution: 0.9326162338256836
normalized output: 1.0434190034866333
none
tensor(0.9718, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([1.6159e-01, 9.5359e-01, 1.4844e-01, 5.7651e-01, 2.8796e-03, 6.8131e-10,
        1.5095e-11, 7.8315e-11, 1.9018e-11, 7.1601e-01], device='cuda:0')
1469983670
compound
-1400000
2023-11-23 19:10:19.317945: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 19:10:19.580843: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 19:10:20.860487: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 19:10:20.860737: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 19:10:20.860767: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 47
Corresponding xs for GT ys max: tensor([ 5.0452,  1.5516,  0.4298,  6.7109,  3.7097, -6.6557,  4.4452,  0.8856,
         5.2962, -2.2380, -0.4811,  3.2882, -2.3668, -4.1374,  1.1906, -5.9409,
         2.5288, -0.2831, -1.7240,  3.3186, -0.2976,  0.6765,  3.5357,  4.3371,
        -8.5737, 10.3043, -2.7659, -4.1091,  3.5580, -1.4198,  2.5622, -3.8499],
       device='cuda:0')
sum of x entries: 18.53124237060547
RESULT torch.Size([10])
logp: 0.16088375449180603
QED: 0.9528229832649231
SA: 0.1420391947031021
Solution: 0.9326162338256836
normalized output: 1.0511759519577026
none
tensor(0.9788, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([1.6088e-01, 9.5282e-01, 1.4204e-01, 4.9802e-01, 1.6532e-03, 1.1796e-10,
        1.0384e-12, 9.0526e-12, 1.3886e-12, 7.1224e-01], device='cuda:0')
1469983670
compound
-1600000
2023-11-23 19:17:00.127949: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 19:17:00.365264: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 19:17:01.617581: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 19:17:01.617785: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 19:17:01.617806: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 47
Corresponding xs for GT ys max: tensor([ 5.1715,  2.3550,  0.2811,  6.1474,  4.3264, -7.3437,  5.1172, -0.7047,
         3.8690, -1.3922,  0.2725,  3.0388, -1.6625, -2.8957,  3.2114, -7.3912,
        -1.2481, -0.5901, -0.7876,  4.0847,  1.5506,  3.2009,  4.1962,  3.9430,
        -8.2968,  9.0547, -0.8183, -2.6346,  0.6997,  1.6121,  0.1594, -5.5225],
       device='cuda:0')
sum of x entries: 21.003700256347656
RESULT torch.Size([10])
logp: 0.13882002234458923
QED: 0.9865049719810486
SA: 0.10629166662693024
Solution: 0.9326162338256836
normalized output: 1.0596873760223389
none
tensor(0.9865, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([1.3882e-01, 9.8650e-01, 1.0629e-01, 7.1283e-01, 1.8563e-03, 1.0588e-10,
        1.3650e-11, 2.1383e-11, 1.6677e-11, 6.8232e-01], device='cuda:0')
1469983670
compound
-1800000
2023-11-23 19:23:50.385199: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 19:23:50.608074: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 19:23:51.954986: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 19:23:51.955168: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 19:23:51.955184: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 47
Corresponding xs for GT ys max: tensor([ 5.2183,  2.1994, -0.2750,  5.0251,  1.6197, -7.4086,  4.3907, -0.0858,
         4.6095, -3.0948,  1.5227,  2.5265, -1.9488, -4.9021,  2.8476, -6.7850,
         2.4261,  1.4012, -0.9167,  1.8623,  1.8285, -0.7523,  5.3554,  4.5872,
        -9.1080, 10.7926, -2.3808, -3.7572,  3.4732,  0.3918,  1.3691, -6.0308],
       device='cuda:0')
sum of x entries: 16.00110626220703
RESULT torch.Size([10])
logp: 0.14544491469860077
QED: 0.9551435112953186
SA: 0.11673352122306824
Solution: 0.9326162338256836
normalized output: 1.056632399559021
none
tensor(0.9837, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([1.4544e-01, 9.5514e-01, 1.1673e-01, 5.4322e-01, 1.3037e-03, 3.2637e-11,
        3.7970e-13, 2.6352e-12, 5.7884e-13, 6.4730e-01], device='cuda:0')
1469983670
compound
-2000000
2023-11-23 19:30:28.584602: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 19:30:28.775740: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 19:30:30.171019: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 19:30:30.171213: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 19:30:30.171230: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 202
Corresponding xs for GT ys max: tensor([  0.1387,  -3.1131,  -5.9829,   5.5469,  -0.9355,  -2.7827,   3.1495,
         -0.6233,   4.5458,  -4.6226,  -2.0978,  -3.2624,  -8.0976,  -8.8862,
          5.6327, -10.4404,  -2.4392,   1.5056,  -4.9957,   2.1271,   0.3201,
         -0.2807,  -0.2594,   1.5339,   1.1979,  -1.7715,   8.2604,  -3.0201,
         -2.8188,   4.8917,   4.6612,  -3.1937], device='cuda:0')
sum of x entries: -26.1121883392334
RESULT torch.Size([10])
logp: 0.12980413436889648
QED: 0.9519917964935303
SA: 0.15526726841926575
Solution: 0.9326162338256836
normalized output: 1.0572701692581177
none
tensor(0.9843, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([1.2980e-01, 9.5199e-01, 1.5527e-01, 6.4737e-01, 8.9390e-04, 4.3309e-11,
        2.5542e-12, 4.9178e-12, 4.0164e-12, 3.4944e-01], device='cuda:0')
1469983670
compound
-2500000
2023-11-23 19:37:08.017243: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 19:37:08.247896: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 19:37:09.610466: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 19:37:09.610712: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 19:37:09.610732: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 202
Corresponding xs for GT ys max: tensor([  0.5821,  -2.8138,  -6.3740,   5.2512,  -1.0268,  -2.7366,   2.7149,
         -0.7534,   4.8383,  -4.7048,  -2.6000,  -3.7720,  -8.1029,  -8.2476,
          5.5112, -10.6389,  -2.2094,   1.1529,  -5.2475,   2.6538,   0.2850,
         -0.7862,   0.1917,   2.2120,   1.0819,  -1.6695,   9.6255,  -3.1094,
         -2.7580,   4.7521,   4.9593,  -3.0559], device='cuda:0')
sum of x entries: -24.794527053833008
RESULT torch.Size([10])
logp: 0.11819155514240265
QED: 0.9581372737884521
SA: 0.1429762989282608
Solution: 0.9326162338256836
normalized output: 1.0557191371917725
none
tensor(0.9829, device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([1.1819e-01, 9.5814e-01, 1.4298e-01, 6.8628e-01, 7.0032e-04, 1.9052e-11,
        1.0622e-12, 2.0362e-12, 1.6064e-12, 3.3548e-01], device='cuda:0')
1469983670
compound
-3000000
2023-11-23 19:43:43.713915: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 19:43:43.912789: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 19:43:45.226227: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 19:43:45.226417: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 19:43:45.226432: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 130
Corresponding xs for GT ys max: tensor([-1.0772e+01,  7.7597e+00, -1.4000e+00, -4.1068e+00,  9.3454e+00,
         3.7047e+00, -9.1534e-01, -6.9346e+00, -1.9612e+01,  9.9636e-01,
         1.2494e+01,  5.4453e+00,  7.4708e+00,  7.6660e+00, -3.9057e+01,
         4.1630e+01,  2.5851e+00,  1.4399e+01, -7.1959e+00, -1.7785e+01,
        -2.5041e+01, -3.0382e+00,  3.7303e+01,  2.5275e+01,  1.0714e-01,
        -1.1689e+00,  9.7799e+00,  5.4910e+01, -7.6490e+00, -3.2170e+00,
        -3.9850e-01, -4.8954e-02], device='cuda:0')
sum of x entries: 92.52970886230469
RESULT torch.Size([10])
logp: 0.00019323268497828394
QED: 0.9993035793304443
SA: 4.658036590632229e-21
Solution: 0.9326162338256836
normalized output: 1.0746344327926636
none
tensor(1., device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([1.9323e-04, 9.9930e-01, 4.6580e-21, 1.0000e+00, 2.7730e-28, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 2.9468e-07], device='cuda:0')
1469983670
compound
-4000000
2023-11-23 19:50:17.892656: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 19:50:18.132458: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 19:50:19.541441: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 19:50:19.541653: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 19:50:19.541671: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 56
Corresponding xs for GT ys max: tensor([ -8.1662,  -1.1674,  -1.4085,  -9.9767,   1.9566,   4.0033,  11.7521,
         -7.8479, -26.1957,   4.2167,   9.3162,  18.2792,   1.3348,  21.0486,
        -46.6494,  19.2437,   0.7703,   9.9510,   6.8427, -15.5576, -34.3576,
         10.5090,  23.3602,  10.4601,  -3.8553,  10.6569,  -3.5954,  49.2459,
        -10.2544,  -2.1285, -10.0246,   4.2151], device='cuda:0')
sum of x entries: 35.97723388671875
RESULT torch.Size([10])
logp: 0.0013547156704589725
QED: 1.0
SA: 4.50760184089467e-20
Solution: 0.9326162338256836
normalized output: 1.0746344327926636
none
tensor(1., device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([1.3547e-03, 1.0000e+00, 4.5076e-20, 1.0000e+00, 9.3481e-30, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 7.8207e-07], device='cuda:0')
1469983670
compound
-5000000
2023-11-23 19:57:00.672373: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-23 19:57:00.899792: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-23 19:57:02.253054: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 19:57:02.253280: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-23 19:57:02.253309: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/lazy/triangular_lazy_tensor.py:136: UserWarning: torch.triangular_solve is deprecated in favor of torch.linalg.solve_triangularand will be removed in a future PyTorch release.
torch.linalg.solve_triangular has its arguments reversed and does not return a copy of one of the inputs.
X = torch.triangular_solve(B, A).solution
should be replaced with
X = torch.linalg.solve_triangular(A, B). (Triggered internally at ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2115.)
  res = torch.triangular_solve(right_tensor, self.evaluate(), upper=self.upper).solution
/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/gpytorch/distributions/multivariate_normal.py:263: NumericalWarning: Negative variance values detected. This is likely due to numerical instabilities. Rounding negative variances up to 1e-06.
  NumericalWarning,
X shape:  (10000, 32)
Y shape:  (10000, 3)
Score matching loss
X Shape:  torch.Size([10000, 32])
Y Shape:  torch.Size([10000, 3])
TEST 1
TEST 2
torch.Size([256, 32])
YS SHAPE:  torch.Size([256, 10])
Index of maximum value: 144
Corresponding xs for GT ys max: tensor([-1.5857e+01,  4.8525e+00, -2.5679e+00, -5.4323e+00,  8.2388e+00,
         2.3497e+00,  3.6723e+00, -6.7844e+00, -1.4746e+01,  3.0885e+00,
         1.4808e+01,  8.1331e+00,  7.0745e+00,  1.2034e+01, -4.8541e+01,
         4.9871e+01,  6.6640e+00,  1.4890e+01, -1.0819e+01, -1.8797e+01,
        -3.0420e+01, -5.2152e-01,  3.7019e+01,  2.5244e+01, -2.2058e+00,
        -1.1964e-02,  6.4114e+00,  6.1676e+01, -7.2757e+00, -2.7323e+00,
        -5.1269e+00,  4.4497e-01], device='cuda:0')
sum of x entries: 94.63282775878906
RESULT torch.Size([10])
logp: 0.0001756899437168613
QED: 0.9996892213821411
SA: 8.724881286695818e-24
Solution: 0.9326162338256836
normalized output: 1.0746344327926636
none
tensor(1., device='cuda:0')
(256, 32)
--------------------------results----------------------------
nor: tensor([1.7569e-04, 9.9969e-01, 8.7249e-24, 1.0000e+00, 1.4064e-31, 0.0000e+00,
        0.0000e+00, 0.0000e+00, 0.0000e+00, 4.8101e-08], device='cuda:0')
1469983670
compound
500000
2023-11-26 02:17:40.619908: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-26 02:17:40.849057: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-26 02:17:42.207002: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:17:42.207205: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:17:42.207227: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
X shape:  (10000, 32)
Y shape:  (10000, 3)
Traceback (most recent call last):
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 1202, in <module>
    normalise_y=args.normalise_y)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 550, in run_evaluate
    problem = get_problem('molecular_discovery')
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 46, in get_problem
    return PROBLEM[name](*args, **kwargs)
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 608, in __init__
    self.model.load_state_dict(torch.load('./surrogate_model.pt'))
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 771, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 270, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 251, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './surrogate_model.pt'
1469983670
compound
600000
2023-11-26 02:17:50.495076: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-26 02:17:50.683032: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-26 02:17:51.541099: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:17:51.541318: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:17:51.541342: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
X shape:  (10000, 32)
Y shape:  (10000, 3)
Traceback (most recent call last):
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 1202, in <module>
    normalise_y=args.normalise_y)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 550, in run_evaluate
    problem = get_problem('molecular_discovery')
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 46, in get_problem
    return PROBLEM[name](*args, **kwargs)
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 608, in __init__
    self.model.load_state_dict(torch.load('./surrogate_model.pt'))
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 771, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 270, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 251, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './surrogate_model.pt'
1469983670
compound
700000
2023-11-26 02:17:58.920623: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-26 02:17:59.138347: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-26 02:18:00.006689: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:18:00.006882: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:18:00.006909: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
X shape:  (10000, 32)
Y shape:  (10000, 3)
Traceback (most recent call last):
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 1202, in <module>
    normalise_y=args.normalise_y)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 550, in run_evaluate
    problem = get_problem('molecular_discovery')
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 46, in get_problem
    return PROBLEM[name](*args, **kwargs)
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 608, in __init__
    self.model.load_state_dict(torch.load('./surrogate_model.pt'))
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 771, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 270, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 251, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './surrogate_model.pt'
1469983670
compound
800000
2023-11-26 02:18:07.697216: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-26 02:18:07.922063: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-26 02:18:08.885577: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:18:08.885820: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:18:08.885843: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
X shape:  (10000, 32)
Y shape:  (10000, 3)
Traceback (most recent call last):
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 1202, in <module>
    normalise_y=args.normalise_y)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 550, in run_evaluate
    problem = get_problem('molecular_discovery')
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 46, in get_problem
    return PROBLEM[name](*args, **kwargs)
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 608, in __init__
    self.model.load_state_dict(torch.load('./surrogate_model.pt'))
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 771, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 270, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 251, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './surrogate_model.pt'
1469983670
compound
900000
2023-11-26 02:18:16.480265: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-26 02:18:16.666930: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-26 02:18:17.534965: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:18:17.535159: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:18:17.535174: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
X shape:  (10000, 32)
Y shape:  (10000, 3)
Traceback (most recent call last):
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 1202, in <module>
    normalise_y=args.normalise_y)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 550, in run_evaluate
    problem = get_problem('molecular_discovery')
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 46, in get_problem
    return PROBLEM[name](*args, **kwargs)
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 608, in __init__
    self.model.load_state_dict(torch.load('./surrogate_model.pt'))
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 771, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 270, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 251, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './surrogate_model.pt'
1469983670
compound
1000000
2023-11-26 02:18:25.041157: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-26 02:18:25.262446: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-26 02:18:26.189962: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:18:26.190160: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:18:26.190175: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
X shape:  (10000, 32)
Y shape:  (10000, 3)
Traceback (most recent call last):
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 1202, in <module>
    normalise_y=args.normalise_y)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 550, in run_evaluate
    problem = get_problem('molecular_discovery')
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 46, in get_problem
    return PROBLEM[name](*args, **kwargs)
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 608, in __init__
    self.model.load_state_dict(torch.load('./surrogate_model.pt'))
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 771, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 270, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 251, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './surrogate_model.pt'
1469983670
compound
1200000
2023-11-26 02:18:33.649693: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-26 02:18:33.864282: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-26 02:18:34.732152: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:18:34.732355: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:18:34.732382: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
X shape:  (10000, 32)
Y shape:  (10000, 3)
Traceback (most recent call last):
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 1202, in <module>
    normalise_y=args.normalise_y)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 550, in run_evaluate
    problem = get_problem('molecular_discovery')
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 46, in get_problem
    return PROBLEM[name](*args, **kwargs)
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 608, in __init__
    self.model.load_state_dict(torch.load('./surrogate_model.pt'))
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 771, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 270, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 251, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './surrogate_model.pt'
1469983670
compound
1400000
2023-11-26 02:18:42.722304: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-26 02:18:42.956727: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-26 02:18:43.924917: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:18:43.925125: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:18:43.925144: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
X shape:  (10000, 32)
Y shape:  (10000, 3)
Traceback (most recent call last):
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 1202, in <module>
    normalise_y=args.normalise_y)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 550, in run_evaluate
    problem = get_problem('molecular_discovery')
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 46, in get_problem
    return PROBLEM[name](*args, **kwargs)
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 608, in __init__
    self.model.load_state_dict(torch.load('./surrogate_model.pt'))
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 771, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 270, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 251, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './surrogate_model.pt'
1469983670
compound
1600000
2023-11-26 02:18:51.998679: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-26 02:18:52.224064: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-26 02:18:53.098711: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:18:53.098889: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:18:53.098904: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
X shape:  (10000, 32)
Y shape:  (10000, 3)
Traceback (most recent call last):
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 1202, in <module>
    normalise_y=args.normalise_y)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 550, in run_evaluate
    problem = get_problem('molecular_discovery')
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 46, in get_problem
    return PROBLEM[name](*args, **kwargs)
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 608, in __init__
    self.model.load_state_dict(torch.load('./surrogate_model.pt'))
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 771, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 270, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 251, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './surrogate_model.pt'
1469983670
compound
1800000
2023-11-26 02:19:01.004424: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-26 02:19:01.195839: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-26 02:19:02.125368: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:19:02.125632: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:19:02.125663: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
X shape:  (10000, 32)
Y shape:  (10000, 3)
Traceback (most recent call last):
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 1202, in <module>
    normalise_y=args.normalise_y)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 550, in run_evaluate
    problem = get_problem('molecular_discovery')
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 46, in get_problem
    return PROBLEM[name](*args, **kwargs)
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 608, in __init__
    self.model.load_state_dict(torch.load('./surrogate_model.pt'))
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 771, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 270, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 251, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './surrogate_model.pt'
1469983670
compound
2000000
2023-11-26 02:19:09.583426: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-26 02:19:09.803417: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-26 02:19:10.683524: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:19:10.683706: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:19:10.683722: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
X shape:  (10000, 32)
Y shape:  (10000, 3)
Traceback (most recent call last):
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 1202, in <module>
    normalise_y=args.normalise_y)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 550, in run_evaluate
    problem = get_problem('molecular_discovery')
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 46, in get_problem
    return PROBLEM[name](*args, **kwargs)
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 608, in __init__
    self.model.load_state_dict(torch.load('./surrogate_model.pt'))
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 771, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 270, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 251, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './surrogate_model.pt'
1469983670
compound
2500000
2023-11-26 02:19:18.462013: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-26 02:19:18.650159: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-26 02:19:19.532288: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:19:19.532487: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:19:19.532508: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
X shape:  (10000, 32)
Y shape:  (10000, 3)
Traceback (most recent call last):
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 1202, in <module>
    normalise_y=args.normalise_y)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 550, in run_evaluate
    problem = get_problem('molecular_discovery')
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 46, in get_problem
    return PROBLEM[name](*args, **kwargs)
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 608, in __init__
    self.model.load_state_dict(torch.load('./surrogate_model.pt'))
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 771, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 270, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 251, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './surrogate_model.pt'
1469983670
compound
3000000
2023-11-26 02:19:27.243932: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-26 02:19:27.430193: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-26 02:19:28.354423: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:19:28.354620: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:19:28.354658: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
X shape:  (10000, 32)
Y shape:  (10000, 3)
Traceback (most recent call last):
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 1202, in <module>
    normalise_y=args.normalise_y)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 550, in run_evaluate
    problem = get_problem('molecular_discovery')
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 46, in get_problem
    return PROBLEM[name](*args, **kwargs)
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 608, in __init__
    self.model.load_state_dict(torch.load('./surrogate_model.pt'))
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 771, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 270, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 251, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './surrogate_model.pt'
1469983670
compound
4000000
2023-11-26 02:19:35.940802: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-26 02:19:36.161091: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-26 02:19:37.035860: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:19:37.036056: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:19:37.036074: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
X shape:  (10000, 32)
Y shape:  (10000, 3)
Traceback (most recent call last):
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 1202, in <module>
    normalise_y=args.normalise_y)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 550, in run_evaluate
    problem = get_problem('molecular_discovery')
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 46, in get_problem
    return PROBLEM[name](*args, **kwargs)
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 608, in __init__
    self.model.load_state_dict(torch.load('./surrogate_model.pt'))
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 771, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 270, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 251, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './surrogate_model.pt'
1469983670
compound
5000000
2023-11-26 02:19:45.064205: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-11-26 02:19:45.280227: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-11-26 02:19:46.283587: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:19:46.283773: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: :/nethome/wmu30/.mujoco/mujoco200/bin
2023-11-26 02:19:46.283991: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
X shape:  (10000, 32)
Y shape:  (10000, 3)
Traceback (most recent call last):
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 1202, in <module>
    normalise_y=args.normalise_y)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "design_baselines/diff_multi/trainer_amend_multi_DKL_valid.py", line 550, in run_evaluate
    problem = get_problem('molecular_discovery')
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 46, in get_problem
    return PROBLEM[name](*args, **kwargs)
  File "/mnt/284ac980-b350-4035-8e02-707f671ad89e/wmu30/ddom-multi-gui/design_baselines/diff_multi/molecular_discovery_problem/problem.py", line 608, in __init__
    self.model.load_state_dict(torch.load('./surrogate_model.pt'))
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 771, in load
    with _open_file_like(f, 'rb') as opened_file:
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 270, in _open_file_like
    return _open_file(name_or_buffer, mode)
  File "/nethome/wmu30/anaconda3/envs/design-baseliness/lib/python3.7/site-packages/torch/serialization.py", line 251, in __init__
    super(_open_file, self).__init__(open(name, mode))
FileNotFoundError: [Errno 2] No such file or directory: './surrogate_model.pt'
